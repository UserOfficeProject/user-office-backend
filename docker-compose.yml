version: "3.1"

services:
  duo-cron-job:
    image: dmsc/duo-cron-job:develop

  db:
    image: postgres:11-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: duopassword
      POSTGRES_USER: duouser
      POSTGRES_DB: duo
    ports:
      - 5432:5432
    volumes:
      - ./db_patches/:/docker-entrypoint-initdb.d/

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq"
    volumes:
      - ./rabbitmq-isolated.conf:/etc/rabbitmq/rabbitmq.config

  factory:
    image: dmsc/duo-factory:develop
    init: true
    environment:
      - NODE_ENV=production
      - DATABASE_HOSTNAME=localhost
      - DATABASE_PORT=5432
      - DATABASE_USER=duouser
      - DATABASE_PASSWORD=duopassword
      - DATABASE_DATABASE=duo
    ports:
      - 4500:4500
    cap_add:
      - SYS_ADMIN

  scheduler-frontend:
    image: "dmsc/duo-scheduler-frontend:develop"
    ports:
      - 33000:80 # avoid collision
    environment:
      - GATEWAY_HOST=gateway:4100

  scheduler-backend:
    image: "dmsc/duo-scheduler-backend:develop"
    environment:
      - NODE_ENV=development
      - DATABASE_HOSTNAME=scheduler-db
      - DATABASE_PORT=5432
      - DATABASE_USER=schedulerUser
      - DATABASE_PASSWORD=schedulerPassword
      - DATABASE_DATABASE=scheduler
      - SCHEDULER_CONFIG_AUTH_REDIRECT=http://localhost:3000/shared-auth
      - USER_OFFICE_ENDPOINT=http://backend:4000/graphql
      - RABBITMQ_HOSTNAME=rabbitmq
      - INCLUDE_SEEDS=1
    depends_on:
      - scheduler-db
    ports:
      - 44000:4000 # avoid collision

  scheduler-db:
    image: postgres:11-alpine
    restart: always
    environment:
      POSTGRES_DB: scheduler
      POSTGRES_USER: schedulerUser
      POSTGRES_PASSWORD: schedulerPassword
    ports:
      - 54320:5432 # avoid collision

  gateway:
    image: "dmsc/duo-gateway:develop"
    environment:
      USER_OFFICE_BACKEND: http://host.docker.internal:4000/graphql
      USER_OFFICE_SCHEDULER_BACKEND: http://scheduler-backend:4000/graphql
      NODE_ENV: development
      ENABLE_SERVICE_POLLING: 1
    ports:
      - 4100:4100
