// NOTE: When creating new event we need to follow the same name standardization/convention: [WHERE]_[WHAT]
export enum Event {
  PROPOSAL_CREATED = 'PROPOSAL_CREATED',
  PROPOSAL_UPDATED = 'PROPOSAL_UPDATED',
  PROPOSAL_SUBMITTED = 'PROPOSAL_SUBMITTED',
  PROPOSAL_FEASIBLE = 'PROPOSAL_FEASIBLE',
  PROPOSAL_SEP_SELECTED = 'PROPOSAL_SEP_SELECTED',
  PROPOSAL_INSTRUMENT_SELECTED = 'PROPOSAL_INSTRUMENT_SELECTED',
  PROPOSAL_FEASIBILITY_REVIEW_SUBMITTED = 'PROPOSAL_FEASIBILITY_REVIEW_SUBMITTED',
  PROPOSAL_SAMPLE_REVIEW_SUBMITTED = 'PROPOSAL_SAMPLE_REVIEW_SUBMITTED',
  PROPOSAL_SAMPLE_SAFE = 'PROPOSAL_SAMPLE_SAFE',
  PROPOSAL_ALL_SEP_REVIEWERS_SELECTED = 'PROPOSAL_ALL_SEP_REVIEWERS_SELECTED',
  PROPOSAL_SEP_REVIEW_SUBMITTED = 'PROPOSAL_SEP_REVIEW_SUBMITTED',
  PROPOSAL_SEP_MEETING_SUBMITTED = 'PROPOSAL_SEP_MEETING_SUBMITTED',
  PROPOSAL_INSTRUMENT_SUBMITTED = 'PROPOSAL_INSTRUMENT_SUBMITTED',
  PROPOSAL_ACCEPTED = 'PROPOSAL_ACCEPTED',
  PROPOSAL_REJECTED = 'PROPOSAL_REJECTED',
  CALL_ENDED = 'CALL_ENDED',
  CALL_REVIEW_ENDED = 'CALL_REVIEW_ENDED',
  CALL_SEP_REVIEW_ENDED = 'CALL_SEP_REVIEW_ENDED',
  USER_CREATED = 'USER_CREATED',
  USER_UPDATED = 'USER_UPDATED',
  USER_ROLE_UPDATED = 'USER_ROLE_UPDATED',
  USER_DELETED = 'USER_DELETED',
  USER_PASSWORD_RESET_EMAIL = 'USER_PASSWORD_RESET_EMAIL',
  EMAIL_INVITE = 'EMAIL_INVITE',
  SEP_CREATED = 'SEP_CREATED',
  SEP_UPDATED = 'SEP_UPDATED',
  SEP_MEMBERS_ASSIGNED = 'SEP_MEMBERS_ASSIGNED',
  SEP_MEMBER_REMOVED = 'SEP_MEMBER_REMOVED',
  SEP_PROPOSAL_ASSIGNED = 'SEP_PROPOSAL_ASSIGNED',
  SEP_PROPOSAL_REMOVED = 'SEP_PROPOSAL_REMOVED',
  SEP_MEMBER_ASSIGNED_TO_PROPOSAL = 'SEP_MEMBER_ASSIGNED_TO_PROPOSAL',
  SEP_MEMBER_REMOVED_FROM_PROPOSAL = 'SEP_MEMBER_REMOVED_FROM_PROPOSAL',
  PROPOSAL_NOTIFIED = 'PROPOSAL_NOTIFIED',
}

export const EventLabel = new Map<Event, string>([
  [Event.PROPOSAL_CREATED, 'Event occurs when proposal is created'],
  [Event.PROPOSAL_UPDATED, 'Event occurs when proposal is updated'],
  [Event.PROPOSAL_SUBMITTED, 'Event occurs when proposal is submitted'],
  [
    Event.PROPOSAL_FEASIBLE,
    'Event occurs when proposal feasibility review is submitted with value of feasible',
  ],
  [
    Event.PROPOSAL_SEP_SELECTED,
    'Event occurs when SEP gets assigned to proposal',
  ],
  [Event.PROPOSAL_INSTRUMENT_SELECTED, 'PROPOSAL_INSTRUMENT_SELECTED'],
  [
    Event.PROPOSAL_FEASIBILITY_REVIEW_SUBMITTED,
    'PROPOSAL_FEASIBILITY_REVIEW_SUBMITTED',
  ],
  [Event.PROPOSAL_SAMPLE_REVIEW_SUBMITTED, 'PROPOSAL_SAMPLE_REVIEW_SUBMITTED'],
  [Event.PROPOSAL_SAMPLE_SAFE, 'PROPOSAL_SAMPLE_SAFE'],
  [
    Event.PROPOSAL_ALL_SEP_REVIEWERS_SELECTED,
    'PROPOSAL_ALL_SEP_REVIEWERS_SELECTED',
  ],
  [Event.PROPOSAL_SEP_REVIEW_SUBMITTED, 'PROPOSAL_SEP_REVIEW_SUBMITTED'],
  [Event.PROPOSAL_SEP_MEETING_SUBMITTED, 'PROPOSAL_SEP_MEETING_SUBMITTED'],
  [Event.PROPOSAL_INSTRUMENT_SUBMITTED, 'PROPOSAL_INSTRUMENT_SUBMITTED'],
  [Event.PROPOSAL_ACCEPTED, 'PROPOSAL_ACCEPTED'],
  [Event.PROPOSAL_REJECTED, 'PROPOSAL_REJECTED'],
  [Event.CALL_ENDED, 'CALL_ENDED'],
  [Event.CALL_REVIEW_ENDED, 'CALL_REVIEW_ENDED'],
  [Event.CALL_SEP_REVIEW_ENDED, 'CALL_SEP_REVIEW_ENDED'],
  [Event.USER_CREATED, 'USER_CREATED'],
  [Event.USER_UPDATED, 'USER_UPDATED'],
  [Event.USER_ROLE_UPDATED, 'USER_ROLE_UPDATED'],
  [Event.USER_DELETED, 'USER_DELETED'],
  [Event.USER_PASSWORD_RESET_EMAIL, 'USER_PASSWORD_RESET_EMAIL'],
  [Event.EMAIL_INVITE, 'EMAIL_INVITE'],
  [Event.SEP_CREATED, 'SEP_CREATED'],
  [Event.SEP_UPDATED, 'SEP_UPDATED'],
  [Event.SEP_MEMBERS_ASSIGNED, 'SEP_MEMBERS_ASSIGNED'],
  [Event.SEP_MEMBER_REMOVED, 'SEP_MEMBER_REMOVED'],
  [Event.SEP_PROPOSAL_ASSIGNED, 'SEP_PROPOSAL_ASSIGNED'],
  [Event.SEP_PROPOSAL_REMOVED, 'SEP_PROPOSAL_REMOVED'],
  [Event.SEP_MEMBER_ASSIGNED_TO_PROPOSAL, 'SEP_MEMBER_ASSIGNED_TO_PROPOSAL'],
  [Event.SEP_MEMBER_REMOVED_FROM_PROPOSAL, 'SEP_MEMBER_REMOVED_FROM_PROPOSAL'],
  [Event.PROPOSAL_NOTIFIED, 'PROPOSAL_NOTIFIED'],
]);
