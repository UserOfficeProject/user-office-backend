{
	"info": {
		"_postman_id": "137e0201-4f74-4988-9e9c-1bd8ebb7298f",
		"name": "Monitoring a collection copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "createUser [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "40f2b633-9ff5-4291-8ea2-0fa7146a2ee6",
						"exec": [
							"pm.test(\"Should be able to create user\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.createUser.user.id).to.be.above(0);",
							"});",
							"",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"NEW_USER_ID\", jsonData.data.createUser.user.id);",
							"pm.environment.set(\"NEW_USER_EMAIL\", jsonData.data.createUser.user.email);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b5d7b849-d48a-4020-9e4e-d695300afe15",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors",
						"type": "text"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin",
						"type": "text"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br",
						"type": "text"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "keep-alive",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation (\n    $orcid: String!, \n    $email: String!, \n    $password: String!,\n    $firstname: String!,\n    $lastname: String!,\n    $position: String!,\n    $phone: String!,\n    $nationality: Int!\n) {\n  createUser(\n    user_title: \"Ms.\"\n    firstname: $firstname\n    preferredname: $firstname\n    lastname: $lastname\n    password: $password\n    orcid: $orcid\n    orcidHash: \"qweqweqwe\"\n    refreshToken: \"qweqweqwe\"\n    gender: \"female\"\n    nationality: $nationality\n    birthdate: \"2000-01-01\"\n    organisation: 7\n    department: \"QA\"\n    position: $position\n    email: $email\n    telephone: $phone\n    )\n    {\n        user\n        {\n          id\n          email\n        }\n    }\n}",
						"variables": "{\n\t\"orcid\":\"{{$randomUUID}}\",\n\t\"email\":\"{{$randomEmail}}\",\n\t\"password\":\"{{USER_PASSWORD}}\",\n\t\"firstname\":\"{{$randomFirstName}}\",\n\t\"lastname\":\"{{$randomLastName}}\",\n\t\"position\":\"{{$randomJobTitle}}\",\n\t\"phone\":\"{{$randomPhoneNumber}}\",\n\t\"nationality\":9\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "users [Query]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "44dbd924-8828-4a4c-a05c-16f01f46d5cd",
						"exec": [
							"pm.test(\"Should be able to fetch users\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.users.totalCount).to.be.above(0)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($filter: String!, $first: Int!, $offset: Int!, $subtractUsers:[Int], $userRole:UserRole) {\n  users(filter: $filter, first: $first, offset: $offset, subtractUsers:$subtractUsers, userRole:$userRole) {\n    users {\n      firstname\n      lastname\n      organisation\n      id\n    }\n    totalCount\n  }\n}\n",
						"variables": "{\n    \"filter\": \"\",\n    \"offset\": 0,\n    \"first\": 5,\n    \"subtractUsers\":[],\n    \"userRole\":\"USER\"\n  }"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "login [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4c64eb40-257f-4d71-a622-095f90630a7a",
						"exec": [
							"pm.test(\"Should be able to log in\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.login.token).not.eql(null)",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"NEW_USER_TOKEN\", jsonData.data.login.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/ProposalSubmission"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    token\n    error\n  }\n}\n",
						"variables": "{\n    \"email\": \"{{NEW_USER_EMAIL}}\",\n    \"password\":\"{{USER_PASSWORD}}\"\n  }"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "token [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6f7a548c-ed46-4568-903d-bbbc97a3bd4a",
						"exec": [
							"pm.test(\"Should be able to renew token\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.token.error).to.eql(null)",
							"    pm.expect(jsonData.data.token.token).to.not.eql(null)",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"NEW_USER_TOKEN\", jsonData.data.token.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQ2FybCIsIm1pZGRsZW5hbWUiOiJDaHJpc3RpYW4iLCJsYXN0bmFtZSI6IkNhcmxzc29uIiwidXNlcm5hbWUiOiJ0ZXN0dXNlciIsInByZWZlcnJlZG5hbWUiOm51bGwsIm9yY2lkIjoiNTgxNDU5NjA0IiwiZ2VuZGVyIjoibWFsZSIsIm5hdGlvbmFsaXR5IjoiTm9yd2VnaWFuIiwiYmlydGhkYXRlIjoiMjAwMC0wNC0wMVQyMjowMDowMC4wMDBaIiwib3JnYW5pc2F0aW9uIjoiUm9iZXJ0cywgUmVpbGx5IGFuZCBHdXRrb3dza2kiLCJkZXBhcnRtZW50IjoiSVQgZGVwYXJtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJFc3RvbmlhLCBOZXcgR2FicmllbGxhLCA0MDU2IENyb25pbiBNb3RvcndheSIsInBvc2l0aW9uIjoiU3RyYXRlZ2lzdCIsImVtYWlsIjoiSmF2b240QGhvdG1haWwuY29tIiwidGVsZXBob25lIjoiKDI4OCkgNDMxLTE0NDMiLCJ0ZWxlcGhvbmVfYWx0IjoiKDM3MCkgMzg2LTg5NzYiLCJjcmVhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MTdaIiwidXBkYXRlZCI6IjIwMTktMTAtMDNUMDg6MjQ6NTYuNTE3WiJ9LCJyb2xlcyI6W3siaWQiOjEsInNob3J0Q29kZSI6InVzZXIiLCJ0aXRsZSI6IlVzZXIifV0sImlhdCI6MTU3MDEwMDc5NywiZXhwIjoxNTcwNzA1NTk3fQ.VGrhlvv4eA8RqnHVEPLWRlFegdsG1IXygWJPoeJGCXA"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/ProposalSubmission/11"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($token: String!) {\n  token(token:$token) {\n    token\n    error\n  }\n}\n\n",
						"variables": "{\n\t\"token\": \"{{NEW_USER_TOKEN}}\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "obtainTokenForUser [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2511d0ea-4310-44f0-bb60-a6c9f6df9ef6",
						"exec": [
							"pm.test(\"Should be able to renew token\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.token.error).to.eql(null)",
							"    pm.expect(jsonData.data.token.token).to.not.eql(null)",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"NEW_USER_TOKEN\", jsonData.data.token.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQ2FybCIsIm1pZGRsZW5hbWUiOiJDaHJpc3RpYW4iLCJsYXN0bmFtZSI6IkNhcmxzc29uIiwidXNlcm5hbWUiOiJ0ZXN0dXNlciIsInByZWZlcnJlZG5hbWUiOm51bGwsIm9yY2lkIjoiNTgxNDU5NjA0IiwiZ2VuZGVyIjoibWFsZSIsIm5hdGlvbmFsaXR5IjoiTm9yd2VnaWFuIiwiYmlydGhkYXRlIjoiMjAwMC0wNC0wMVQyMjowMDowMC4wMDBaIiwib3JnYW5pc2F0aW9uIjoiUm9iZXJ0cywgUmVpbGx5IGFuZCBHdXRrb3dza2kiLCJkZXBhcnRtZW50IjoiSVQgZGVwYXJtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJFc3RvbmlhLCBOZXcgR2FicmllbGxhLCA0MDU2IENyb25pbiBNb3RvcndheSIsInBvc2l0aW9uIjoiU3RyYXRlZ2lzdCIsImVtYWlsIjoiSmF2b240QGhvdG1haWwuY29tIiwidGVsZXBob25lIjoiKDI4OCkgNDMxLTE0NDMiLCJ0ZWxlcGhvbmVfYWx0IjoiKDM3MCkgMzg2LTg5NzYiLCJjcmVhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MTdaIiwidXBkYXRlZCI6IjIwMTktMTAtMDNUMDg6MjQ6NTYuNTE3WiJ9LCJyb2xlcyI6W3siaWQiOjEsInNob3J0Q29kZSI6InVzZXIiLCJ0aXRsZSI6IlVzZXIifV0sImlhdCI6MTU3MDEwMDc5NywiZXhwIjoxNTcwNzA1NTk3fQ.VGrhlvv4eA8RqnHVEPLWRlFegdsG1IXygWJPoeJGCXA"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/ProposalSubmission/11"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($token: String!) {\n  token(token:$token) {\n    token\n    error\n  }\n}\n\n",
						"variables": "{\n\t\"token\": \"{{NEW_USER_TOKEN}}\"\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "updatePassword [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a26bbd8-2d0e-4428-8857-6ccb03765356",
						"exec": [
							"pm.test(\"Should be able to update password\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.updatePassword.user.id).to.equal(pm.environment.get(\"NEW_USER_ID\"));",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "679485dc-0869-46f4-9202-a9808be6870c",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"type": "text",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"type": "text",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"type": "text",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"type": "text",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"type": "text",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"type": "text",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Connection",
						"type": "text",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($id:Int!, $password:String!) {\n  updatePassword(id:$id, password:$password)\n    {\n      user {\n        id\n      }\n      error\n    }\n}\n\n",
						"variables": "{\n\t\"id\":{{NEW_USER_ID}},\n\t\"password\":\"{{$randomPassword}}\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "createSep [Mutations]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f22faa47-1395-484a-baf5-d31c5005b6bd",
						"exec": [
							"pm.test(\"Can create proposal template\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.createSEP.error).to.be.eql(null)",
							"    pm.expect(jsonData.data.createSEP.sep.id).to.be.above(0)",
							"    pm.environment.set(\"NEW_SEP_ID\", jsonData.data.createSEP.sep.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($code: String!, $active: Boolean!, $description: String!) {\n  createSEP(code:$code, active:$active, description:$description) {\n    sep {\n      id\n    }\n    error\n  }\n}",
						"variables": "{\n        \"code\": \"{{$randomWord}}\",\n        \"active\": true,\n        \"description\": \"{{$randomWord}}\"\n    }"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "createTemplate [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aef89ced-4a5c-45f6-a914-66e2ac0e9e08",
						"exec": [
							"pm.test(\"Can create proposal template\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.createTemplate.error).to.be.eql(null)",
							"    pm.expect(jsonData.data.createTemplate.template.templateId).to.be.above(0)",
							"    pm.environment.set(\"NEW_TEMPLATE_ID\", jsonData.data.createTemplate.template.templateId);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation  ($categoryId: TemplateCategoryId!, $name: String!, $description: String) {\n  createTemplate(categoryId: $categoryId, name:$name, description:$description) {\n    template {\n      templateId\n      name\n    }\n    error\n  }\n}",
						"variables": "{\n        \"categoryId\": \"PROPOSAL_QUESTIONARY\",\n        \"name\": \"{{$randomWord}}\",\n        \"description\": \"{{$randomWord}}\"\n    }"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "getTemplates [Query]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "abde6c75-5542-4bb8-b73a-9affb5719fd7",
						"exec": [
							"pm.test(\"Can create proposal template\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.templates.find(template => template.templateId === pm.environment.get(\"NEW_TEMPLATE_ID\"))).to.not.eql(undefined)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  templates(filter:{isArchived:false}) {\n\ttemplateId\n  }\n}",
						"variables": ""
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "createCall [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "932914c4-25db-40d1-8894-e53a4e49c7a5",
						"exec": [
							"pm.test(\"Should create call\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.createCall.call.id).to.be.above(0);",
							"});",
							"",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"NEW_CALL_ID\", jsonData.data.createCall.call.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"type": "text",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"type": "text",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"type": "text",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"type": "text",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"type": "text",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"type": "text",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Connection",
						"type": "text",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($shortCode: String!, $startDate: DateTime!, $endDate: DateTime!, $comment: String!, $templateId: Int) {\n  createCall (createCallInput:{\n    shortCode:$shortCode\n    startCall: $startDate\n    endCall: $endDate\n    startReview: $startDate\n    endReview: $endDate\n    startNotify: $startDate\n    endNotify: $endDate\n    startCycle: $startDate\n    endCycle: $endDate\n    cycleComment: $comment\n    surveyComment: \"Test\"\n    templateId: $templateId\n  }\n  )\n  {\n    call {\n      id\n      shortCode\n      startCall\n    }\n    error\n  }\n}",
						"variables": "{\n\t\"shortCode\":\"{{$randomLoremWord}}\",\n\t\"startDate\":\"2010-01-01\",\n\t\"endDate\":\"2030-01-01\",\n\t\"comment\":\"{{$randomPhrase}}\",\n\t\"templateId\": {{NEW_TEMPLATE_ID}}\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "createTopic [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c261489b-bc9a-418a-b827-1851dda366b4",
						"exec": [
							"pm.test(\"Can create topic\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.createTopic.error).to.be.eql(null)",
							"    pm.environment.set(\"NEW_TOPIC_ID\", jsonData.data.createTopic.template.steps[0].topic.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($templateId: Int!) {\n  createTopic(templateId: $templateId, sortOrder: 0) {\n    template {\n      steps {\n        topic {\n          title\n          id\n        }\n      }\n    }\n    error\n  }\n}\n",
						"variables": "{\n\t\"templateId\": {{NEW_TEMPLATE_ID}}\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateTopic [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e6d5322a-d794-41ea-a088-d7862b4554ce",
						"exec": [
							"pm.test(\"Should update topic\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.updateTopic.error).to.eql(null)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAzVDA4OjI0OjU2LjUyMFoiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MjBaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDEwMzkyMiwiZXhwIjoxNTcwNzA4NzIyfQ.VELbODuxgIO7cK7zkdEWLhNZD1EI1PyKopqCiYHonUQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($topicId: Int!, $title: String, $isEnabled: Boolean, $templateId: Int!) {\n  updateTopic(id: $topicId, title: $title, isEnabled: $isEnabled, templateId:$templateId, sortOrder: 0) {\n    template{\n        steps {\n        topic {\n          title\n          id\n          sortOrder\n        }\n      }\n    }\n    error\n  }\n}\n",
						"variables": "{\n        \"title\": \"{{$randomWord}}\",\n        \"topicId\": {{NEW_TOPIC_ID}},\n        \"templateId\": {{NEW_TEMPLATE_ID}}\n    }"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "createQuestion [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a2611a3f-efc6-4cf0-9bb2-808a6ee20ef7",
						"exec": [
							"pm.test(\"Create field should not resut in failure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.createQuestion.error).to.be.eql(null);",
							"});",
							"",
							"pm.test(\"Create field should not resut in failure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.createQuestion.question.dataType).to.be.eql(\"FILE_UPLOAD\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"NEW_FIELD_ID\", jsonData.data.createQuestion.question.proposalQuestionId);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAyVDEyOjMyOjM4LjEyMloiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wMlQxMjozMjozOC4xMjJaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDAyMzY0NiwiZXhwIjoxNTcwNjI4NDQ2fQ.tz1DuEHe-9Clb0seTqQ7MJMmPeoWk3M4fRIcrP8x8CQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($categoryId: TemplateCategoryId!, $dataType: DataType!) {\n  createQuestion(categoryId: $categoryId, dataType: $dataType) {\n    question {\n          proposalQuestionId\n          dataType\n          question\n          config\n          {\n              ... on TextInputConfig {\n                required\n              }\n          }\n          \n\n    }\n    error\n  }\n}",
						"variables": "{\n        \"categoryId\": \"PROPOSAL_QUESTIONARY\",\n        \"dataType\": \"FILE_UPLOAD\",\n        \"fieldConfigFragment\":\"__typename\"\n    }"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateQuestion [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "af1eca8a-1331-4d01-bb97-a045009dbca4",
						"exec": [
							"pm.test(\"Create field should not resut in failure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.updateQuestion).to.not.eql(null);",
							"    pm.expect(jsonData.data.updateQuestion.error).to.eql(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAyVDEyOjMyOjM4LjEyMloiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wMlQxMjozMjozOC4xMjJaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDAyMzY0NiwiZXhwIjoxNTcwNjI4NDQ2fQ.tz1DuEHe-9Clb0seTqQ7MJMmPeoWk3M4fRIcrP8x8CQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($id:String!, $question:String, $config:String) {\n  updateQuestion(id:$id, question:$question, config:$config) {\n    question {\n        question\n        proposalQuestionId\n    }\n    error\n  }\n}\n",
						"variables": "{\n\t\"id\": \"{{NEW_FIELD_ID}}\",\n\"question\": \"{{$randomWords}}\",\n\"config\": \"{\\\"required\\\":true}\",\n\"isEnabled\": true,\n\"dependencies\": []\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "createQuestionTemplateRelation [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "39758e53-b089-4d73-8bf0-0ee72cfb008b",
						"exec": [
							"pm.test(\"Create field should not resut in failure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.createQuestionTemplateRelation.template).to.not.eql(null);",
							"    pm.expect(jsonData.data.createQuestionTemplateRelation.error).to.eql(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAyVDEyOjMyOjM4LjEyMloiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wMlQxMjozMjozOC4xMjJaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDAyMzY0NiwiZXhwIjoxNTcwNjI4NDQ2fQ.tz1DuEHe-9Clb0seTqQ7MJMmPeoWk3M4fRIcrP8x8CQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($templateId: Int!, $questionId: String!, $topicId: Int!) {\n  createQuestionTemplateRelation(templateId:$templateId, questionId:$questionId, sortOrder:0, topicId:$topicId) {\n\ttemplate {\n\t\tname\n    }\n    error\n  }\n}\n",
						"variables": "{\n\t\"questionId\": \"{{NEW_FIELD_ID}}\",\n\t\"topicId\": {{NEW_TOPIC_ID}},\n\"templateId\": {{NEW_TEMPLATE_ID}}\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateQuestionTemplateRelation [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15ad0ea4-4d08-46c2-92e4-f3b4d8b5d912",
						"exec": [
							"pm.test(\"Create field should not resut in failure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.updateQuestionTemplateRelation.template).to.not.eql(null);",
							"    pm.expect(jsonData.data.updateQuestionTemplateRelation.error).to.eql(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAyVDEyOjMyOjM4LjEyMloiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wMlQxMjozMjozOC4xMjJaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDAyMzY0NiwiZXhwIjoxNTcwNjI4NDQ2fQ.tz1DuEHe-9Clb0seTqQ7MJMmPeoWk3M4fRIcrP8x8CQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($questionId: String!, $templateId: Int!, $topicId: Int!, $sortOrder: Int!) {\n  updateQuestionTemplateRelation(questionId: $questionId, templateId: $templateId, topicId: $topicId, sortOrder: $sortOrder) {\n    template {\n      steps {\n        topic {\n          title\n          id\n        }\n        fields {\n          question {\n            proposalQuestionId\n            dataType\n            question\n            config {\n              ... on TextInputConfig {\n                required\n              }\n            }\n          }\n          dependency {\n            questionId\n            dependencyId\n            dependencyNaturalKey\n            condition {\n              condition\n              params\n            }\n          }\n        }\n      }\n    }\n    error\n  }\n}\n",
						"variables": "{\n\t\"questionId\": \"{{NEW_FIELD_ID}}\",\n\"question\": \"{{$randomWords}}\",\n\"config\": \"{\\\"required\\\":true}\",\n\"topicId\": {{NEW_TOPIC_ID}},\n\"sortOrder\": 0,\n\"templateId\": {{NEW_TEMPLATE_ID}}\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "blankQuestionarySteps",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6a16742d-6c38-42ef-a976-91bb4d4ada6b",
						"exec": [
							"pm.test(\"Should create proposal\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.blankQuestionarySteps.fields).not.eq(null)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQ2FybCIsIm1pZGRsZW5hbWUiOiJDaHJpc3RpYW4iLCJsYXN0bmFtZSI6IkNhcmxzc29uIiwidXNlcm5hbWUiOiJ0ZXN0dXNlciIsInByZWZlcnJlZG5hbWUiOm51bGwsIm9yY2lkIjoiNTgxNDU5NjA0IiwiZ2VuZGVyIjoibWFsZSIsIm5hdGlvbmFsaXR5IjoiTm9yd2VnaWFuIiwiYmlydGhkYXRlIjoiMjAwMC0wNC0wMVQyMjowMDowMC4wMDBaIiwib3JnYW5pc2F0aW9uIjoiUm9iZXJ0cywgUmVpbGx5IGFuZCBHdXRrb3dza2kiLCJkZXBhcnRtZW50IjoiSVQgZGVwYXJtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJFc3RvbmlhLCBOZXcgR2FicmllbGxhLCA0MDU2IENyb25pbiBNb3RvcndheSIsInBvc2l0aW9uIjoiU3RyYXRlZ2lzdCIsImVtYWlsIjoiSmF2b240QGhvdG1haWwuY29tIiwidGVsZXBob25lIjoiKDI4OCkgNDMxLTE0NDMiLCJ0ZWxlcGhvbmVfYWx0IjoiKDM3MCkgMzg2LTg5NzYiLCJjcmVhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MTdaIiwidXBkYXRlZCI6IjIwMTktMTAtMDNUMDg6MjQ6NTYuNTE3WiJ9LCJyb2xlcyI6W3siaWQiOjEsInNob3J0Q29kZSI6InVzZXIiLCJ0aXRsZSI6IlVzZXIifV0sImlhdCI6MTU3MDA5ODAyNCwiZXhwIjoxNTcwNzAyODI0fQ.tQKzxyg8_i_Z4b2ny6-naoT3JqaFnJN_Z-MvU1ta31s"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/ProposalSubmission"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query($templateId:Int!) {\nblankQuestionarySteps(templateId:$templateId) {\n\n      fields {\n          question {\n            proposalQuestionId\n              dataType\n              question\n \n          }\n        \n        value\n        dependency {\n          questionId\n            dependencyId\n            dependencyNaturalKey\n            condition {\n                  condition\n                  params\n            }\n        }\n      }\n}\n}",
						"variables": "{\n\t\"templateId\": {{NEW_TEMPLATE_ID}}\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "createProposal [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f5853a25-cac6-4420-8e45-4c1c82c3c58f",
						"exec": [
							"pm.test(\"Should create proposal\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.createProposal.proposal.id).to.be.above(0)",
							"    pm.environment.set(\"NEW_PROPOSAL_ID\", jsonData.data.createProposal.proposal.id);",
							"    pm.environment.set(\"NEW_QUESTIONARY_ID\", jsonData.data.createProposal.proposal.questionaryId);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQ2FybCIsIm1pZGRsZW5hbWUiOiJDaHJpc3RpYW4iLCJsYXN0bmFtZSI6IkNhcmxzc29uIiwidXNlcm5hbWUiOiJ0ZXN0dXNlciIsInByZWZlcnJlZG5hbWUiOm51bGwsIm9yY2lkIjoiNTgxNDU5NjA0IiwiZ2VuZGVyIjoibWFsZSIsIm5hdGlvbmFsaXR5IjoiTm9yd2VnaWFuIiwiYmlydGhkYXRlIjoiMjAwMC0wNC0wMVQyMjowMDowMC4wMDBaIiwib3JnYW5pc2F0aW9uIjoiUm9iZXJ0cywgUmVpbGx5IGFuZCBHdXRrb3dza2kiLCJkZXBhcnRtZW50IjoiSVQgZGVwYXJtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJFc3RvbmlhLCBOZXcgR2FicmllbGxhLCA0MDU2IENyb25pbiBNb3RvcndheSIsInBvc2l0aW9uIjoiU3RyYXRlZ2lzdCIsImVtYWlsIjoiSmF2b240QGhvdG1haWwuY29tIiwidGVsZXBob25lIjoiKDI4OCkgNDMxLTE0NDMiLCJ0ZWxlcGhvbmVfYWx0IjoiKDM3MCkgMzg2LTg5NzYiLCJjcmVhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MTdaIiwidXBkYXRlZCI6IjIwMTktMTAtMDNUMDg6MjQ6NTYuNTE3WiJ9LCJyb2xlcyI6W3siaWQiOjEsInNob3J0Q29kZSI6InVzZXIiLCJ0aXRsZSI6IlVzZXIifV0sImlhdCI6MTU3MDA5ODAyNCwiZXhwIjoxNTcwNzAyODI0fQ.tQKzxyg8_i_Z4b2ny6-naoT3JqaFnJN_Z-MvU1ta31s"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/ProposalSubmission"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($callId: Int!) {\n  createProposal(callId: $callId) {\n    proposal {\n      id\n      status\n      {\n        name\n      }\n      questionaryId\n      questionary {\n        steps {\n          topic {\n            title\n            id\n          }\n          fields {\n            question {\n              proposalQuestionId\n              dataType\n              question\n            }\n            value\n            dependency {\n              questionId\n              dependencyId\n              dependencyNaturalKey\n              condition {\n                condition\n                params\n              }\n            }\n          }\n        }\n      }\n    }\n    error\n  }\n}\n",
						"variables": "{\n\t\"callId\": {{NEW_CALL_ID}}\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "createTemplate(Sample) [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dbf77d5b-2ad8-4091-9b46-5c23cac668f6",
						"exec": [
							"pm.test(\"Should create proposal\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.createTemplate.template.templateId).to.be.above(0)",
							"    pm.environment.set(\"NEW_SAMPLE_TEMPLATE_ID\", jsonData.data.createTemplate.template.templateId);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQ2FybCIsIm1pZGRsZW5hbWUiOiJDaHJpc3RpYW4iLCJsYXN0bmFtZSI6IkNhcmxzc29uIiwidXNlcm5hbWUiOiJ0ZXN0dXNlciIsInByZWZlcnJlZG5hbWUiOm51bGwsIm9yY2lkIjoiNTgxNDU5NjA0IiwiZ2VuZGVyIjoibWFsZSIsIm5hdGlvbmFsaXR5IjoiTm9yd2VnaWFuIiwiYmlydGhkYXRlIjoiMjAwMC0wNC0wMVQyMjowMDowMC4wMDBaIiwib3JnYW5pc2F0aW9uIjoiUm9iZXJ0cywgUmVpbGx5IGFuZCBHdXRrb3dza2kiLCJkZXBhcnRtZW50IjoiSVQgZGVwYXJtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJFc3RvbmlhLCBOZXcgR2FicmllbGxhLCA0MDU2IENyb25pbiBNb3RvcndheSIsInBvc2l0aW9uIjoiU3RyYXRlZ2lzdCIsImVtYWlsIjoiSmF2b240QGhvdG1haWwuY29tIiwidGVsZXBob25lIjoiKDI4OCkgNDMxLTE0NDMiLCJ0ZWxlcGhvbmVfYWx0IjoiKDM3MCkgMzg2LTg5NzYiLCJjcmVhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MTdaIiwidXBkYXRlZCI6IjIwMTktMTAtMDNUMDg6MjQ6NTYuNTE3WiJ9LCJyb2xlcyI6W3siaWQiOjEsInNob3J0Q29kZSI6InVzZXIiLCJ0aXRsZSI6IlVzZXIifV0sImlhdCI6MTU3MDA5ODAyNCwiZXhwIjoxNTcwNzAyODI0fQ.tQKzxyg8_i_Z4b2ny6-naoT3JqaFnJN_Z-MvU1ta31s"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/ProposalSubmission"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  createTemplate(\n    categoryId: SAMPLE_DECLARATION\n    name: \"Sample title\"\n    description: \"Sample description\"\n  ) {\n    template {\n      templateId\n    }\n    error\n  }\n}",
						"variables": ""
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "createSample [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "daac48ae-a9a7-4024-b3f9-f3d9b1de83e0",
						"exec": [
							"pm.test(\"Should create proposal\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.createSample.sample.id).to.be.above(0)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQ2FybCIsIm1pZGRsZW5hbWUiOiJDaHJpc3RpYW4iLCJsYXN0bmFtZSI6IkNhcmxzc29uIiwidXNlcm5hbWUiOiJ0ZXN0dXNlciIsInByZWZlcnJlZG5hbWUiOm51bGwsIm9yY2lkIjoiNTgxNDU5NjA0IiwiZ2VuZGVyIjoibWFsZSIsIm5hdGlvbmFsaXR5IjoiTm9yd2VnaWFuIiwiYmlydGhkYXRlIjoiMjAwMC0wNC0wMVQyMjowMDowMC4wMDBaIiwib3JnYW5pc2F0aW9uIjoiUm9iZXJ0cywgUmVpbGx5IGFuZCBHdXRrb3dza2kiLCJkZXBhcnRtZW50IjoiSVQgZGVwYXJtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJFc3RvbmlhLCBOZXcgR2FicmllbGxhLCA0MDU2IENyb25pbiBNb3RvcndheSIsInBvc2l0aW9uIjoiU3RyYXRlZ2lzdCIsImVtYWlsIjoiSmF2b240QGhvdG1haWwuY29tIiwidGVsZXBob25lIjoiKDI4OCkgNDMxLTE0NDMiLCJ0ZWxlcGhvbmVfYWx0IjoiKDM3MCkgMzg2LTg5NzYiLCJjcmVhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MTdaIiwidXBkYXRlZCI6IjIwMTktMTAtMDNUMDg6MjQ6NTYuNTE3WiJ9LCJyb2xlcyI6W3siaWQiOjEsInNob3J0Q29kZSI6InVzZXIiLCJ0aXRsZSI6IlVzZXIifV0sImlhdCI6MTU3MDA5ODAyNCwiZXhwIjoxNTcwNzAyODI0fQ.tQKzxyg8_i_Z4b2ny6-naoT3JqaFnJN_Z-MvU1ta31s"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/ProposalSubmission"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($sampleTemplateId: Int!, $proposalId: Int!, $questionId: String!) {\n\tcreateSample(title: \"My sample\", templateId: $sampleTemplateId, proposalId: $proposalId, questionId: $questionId) {\n\t\tsample {\n\t\t\tid\n\t\t\ttitle\n\t\t}\n\t\terror\n\t}\n}",
						"variables": "{\n\t\"sampleTemplateId\": {{NEW_SAMPLE_TEMPLATE_ID}},\n\t\"proposalId\": {{NEW_PROPOSAL_ID}},\n\t\"questionId\": \"{{NEW_FIELD_ID}}\"\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "proposal [Query]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "03ff4fff-4f19-4277-97b3-f8a664ed56dc",
						"exec": [
							"pm.test(\"Should get proposal\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.proposal.id).to.eql(pm.environment.get(\"NEW_PROPOSAL_ID\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/ProposalSubmission/2"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($id: Int!) {\n  proposal(id: $id) {\n    id\n    title\n    abstract\n    status\n    {\n      name\n    }\n    users {\n      firstname\n      lastname\n      id\n    }\n    questionary {\n      steps {\n        topic {\n          title\n          id\n        }\n        fields {\n          question {\n            proposalQuestionId\n            dataType\n            question\n            config {\n              ... on TextInputConfig {\n                required\n              }\n            }\n          }\n          value\n          dependency {\n            questionId\n            dependencyId\n            dependencyNaturalKey\n            condition {\n              condition\n              params\n            }\n          }\n        }\n      }\n    }\n    reviews {\n      id\n      comment\n      status\n      reviewer {\n        firstname\n        lastname\n        id\n      }\n    }\n  }\n}\n",
						"variables": "{\n\t\"id\":{{NEW_PROPOSAL_ID}}\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateProposal [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "60460dde-175a-42da-9a02-d650fe7ccb29",
						"exec": [
							"pm.test(\"Should update proposal\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.updateProposal.proposal.id).to.eql(pm.environment.get(\"NEW_PROPOSAL_ID\"))",
							"    pm.expect(jsonData.data.updateProposal.proposal.title).to.eql(pm.environment.get(\"NEW_PROPOSAL_TITLE\"))",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQ2FybCIsIm1pZGRsZW5hbWUiOiJDaHJpc3RpYW4iLCJsYXN0bmFtZSI6IkNhcmxzc29uIiwidXNlcm5hbWUiOiJ0ZXN0dXNlciIsInByZWZlcnJlZG5hbWUiOm51bGwsIm9yY2lkIjoiNTgxNDU5NjA0IiwiZ2VuZGVyIjoibWFsZSIsIm5hdGlvbmFsaXR5IjoiTm9yd2VnaWFuIiwiYmlydGhkYXRlIjoiMjAwMC0wNC0wMVQyMjowMDowMC4wMDBaIiwib3JnYW5pc2F0aW9uIjoiUm9iZXJ0cywgUmVpbGx5IGFuZCBHdXRrb3dza2kiLCJkZXBhcnRtZW50IjoiSVQgZGVwYXJtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJFc3RvbmlhLCBOZXcgR2FicmllbGxhLCA0MDU2IENyb25pbiBNb3RvcndheSIsInBvc2l0aW9uIjoiU3RyYXRlZ2lzdCIsImVtYWlsIjoiSmF2b240QGhvdG1haWwuY29tIiwidGVsZXBob25lIjoiKDI4OCkgNDMxLTE0NDMiLCJ0ZWxlcGhvbmVfYWx0IjoiKDM3MCkgMzg2LTg5NzYiLCJjcmVhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MTdaIiwidXBkYXRlZCI6IjIwMTktMTAtMDNUMDg6MjQ6NTYuNTE3WiJ9LCJyb2xlcyI6W3siaWQiOjEsInNob3J0Q29kZSI6InVzZXIiLCJ0aXRsZSI6IlVzZXIifV0sImlhdCI6MTU3MDEwMDc5NywiZXhwIjoxNTcwNzA1NTk3fQ.VGrhlvv4eA8RqnHVEPLWRlFegdsG1IXygWJPoeJGCXA"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/ProposalSubmission/11"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($id: Int!, $title: String, $abstract: String, $users: [Int!]) {\n      updateProposal(id: $id, title: $title, abstract: $abstract, users: $users) {\n    proposal {\n      id\n      title\n      abstract\n    }\n    error\n  }\n}\n",
						"variables": "{\n        \"id\": {{NEW_PROPOSAL_ID}},\n        \"title\": \"{{NEW_PROPOSAL_TITLE}}\",\n        \"abstract\": \"{{NEW_PROPOSAL_ABSTRACT}}\"\n    }"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "answerTopic [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "295e42b5-f8fb-44ee-8b9e-10a1440eb6bd",
						"exec": [
							"pm.test(\"Should update proposal\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.answerTopic.error).to.eql(null);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQ2FybCIsIm1pZGRsZW5hbWUiOiJDaHJpc3RpYW4iLCJsYXN0bmFtZSI6IkNhcmxzc29uIiwidXNlcm5hbWUiOiJ0ZXN0dXNlciIsInByZWZlcnJlZG5hbWUiOm51bGwsIm9yY2lkIjoiNTgxNDU5NjA0IiwiZ2VuZGVyIjoibWFsZSIsIm5hdGlvbmFsaXR5IjoiTm9yd2VnaWFuIiwiYmlydGhkYXRlIjoiMjAwMC0wNC0wMVQyMjowMDowMC4wMDBaIiwib3JnYW5pc2F0aW9uIjoiUm9iZXJ0cywgUmVpbGx5IGFuZCBHdXRrb3dza2kiLCJkZXBhcnRtZW50IjoiSVQgZGVwYXJtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJFc3RvbmlhLCBOZXcgR2FicmllbGxhLCA0MDU2IENyb25pbiBNb3RvcndheSIsInBvc2l0aW9uIjoiU3RyYXRlZ2lzdCIsImVtYWlsIjoiSmF2b240QGhvdG1haWwuY29tIiwidGVsZXBob25lIjoiKDI4OCkgNDMxLTE0NDMiLCJ0ZWxlcGhvbmVfYWx0IjoiKDM3MCkgMzg2LTg5NzYiLCJjcmVhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MTdaIiwidXBkYXRlZCI6IjIwMTktMTAtMDNUMDg6MjQ6NTYuNTE3WiJ9LCJyb2xlcyI6W3siaWQiOjEsInNob3J0Q29kZSI6InVzZXIiLCJ0aXRsZSI6IlVzZXIifV0sImlhdCI6MTU3MDEwMDc5NywiZXhwIjoxNTcwNzA1NTk3fQ.VGrhlvv4eA8RqnHVEPLWRlFegdsG1IXygWJPoeJGCXA"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/ProposalSubmission/11"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($questionaryId: Int!, $topicId:Int!, $answers: [AnswerInput!]!) {\n  answerTopic(questionaryId:$questionaryId, topicId: $topicId,  answers:$answers) {\n    questionaryStep{\n         fields {\n          question {\n            question\n          }\n        }\n    }\n    error\n  }\n}",
						"variables": "{\n        \"questionaryId\": {{NEW_QUESTIONARY_ID}},\n        \"topicId\": {{NEW_TOPIC_ID}},\n        \"answers\": [{\"questionId\": \"{{NEW_FIELD_ID}}\", \"value\":\"{\\\"value\\\":\\\"val\\\"}\"}]\n    }"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateAnswer [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3cc96da1-84cc-4a23-8975-f4f7da68f355",
						"exec": [
							"pm.test(\"Should update proposal\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.updateAnswer.error).to.eql(null);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQ2FybCIsIm1pZGRsZW5hbWUiOiJDaHJpc3RpYW4iLCJsYXN0bmFtZSI6IkNhcmxzc29uIiwidXNlcm5hbWUiOiJ0ZXN0dXNlciIsInByZWZlcnJlZG5hbWUiOm51bGwsIm9yY2lkIjoiNTgxNDU5NjA0IiwiZ2VuZGVyIjoibWFsZSIsIm5hdGlvbmFsaXR5IjoiTm9yd2VnaWFuIiwiYmlydGhkYXRlIjoiMjAwMC0wNC0wMVQyMjowMDowMC4wMDBaIiwib3JnYW5pc2F0aW9uIjoiUm9iZXJ0cywgUmVpbGx5IGFuZCBHdXRrb3dza2kiLCJkZXBhcnRtZW50IjoiSVQgZGVwYXJtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJFc3RvbmlhLCBOZXcgR2FicmllbGxhLCA0MDU2IENyb25pbiBNb3RvcndheSIsInBvc2l0aW9uIjoiU3RyYXRlZ2lzdCIsImVtYWlsIjoiSmF2b240QGhvdG1haWwuY29tIiwidGVsZXBob25lIjoiKDI4OCkgNDMxLTE0NDMiLCJ0ZWxlcGhvbmVfYWx0IjoiKDM3MCkgMzg2LTg5NzYiLCJjcmVhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MTdaIiwidXBkYXRlZCI6IjIwMTktMTAtMDNUMDg6MjQ6NTYuNTE3WiJ9LCJyb2xlcyI6W3siaWQiOjEsInNob3J0Q29kZSI6InVzZXIiLCJ0aXRsZSI6IlVzZXIifV0sImlhdCI6MTU3MDEwMDc5NywiZXhwIjoxNTcwNzA1NTk3fQ.VGrhlvv4eA8RqnHVEPLWRlFegdsG1IXygWJPoeJGCXA"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/ProposalSubmission/11"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($questionaryId: Int!, $answer: AnswerInput!) {\n    updateAnswer(questionaryId:$questionaryId, answer:$answer) {\n        questionId\n        error\n    }\n}\n",
						"variables": "{\n        \"questionaryId\": {{NEW_QUESTIONARY_ID}},\n        \"answer\": {\"questionId\": \"{{NEW_FIELD_ID}}\", \"value\":\"{\\\"value\\\":\\\"val\\\"}\"}\n    }"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "submitProposal [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9a314b61-1f19-4ae1-9530-03613f20d472",
						"exec": [
							"pm.test(\"Should submit proposal\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.submitProposal.proposal.id).to.equal(pm.environment.get(\"NEW_PROPOSAL_ID\"));",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors",
						"type": "text"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin",
						"type": "text"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br",
						"type": "text"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "keep-alive",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($proposalId: Int!) {\n  submitProposal(id:$proposalId) {\n    proposal {\n      id\n    }\n    error\n  }\n}\n",
						"variables": "{\n\t\"proposalId\":{{NEW_PROPOSAL_ID}}\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "call [Query]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2e368c4c-9595-4622-b650-48aee84e8ccf",
						"exec": [
							"pm.test(\"Should get call\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.call.id).to.eql(pm.environment.get(\"NEW_CALL_ID\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAzVDA4OjI0OjU2LjUyMFoiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MjBaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDEwMzkyMiwiZXhwIjoxNTcwNzA4NzIyfQ.VELbODuxgIO7cK7zkdEWLhNZD1EI1PyKopqCiYHonUQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query($callID: Int!) {\n  call(id:$callID)\n    {\n      id\n    }\n}\n",
						"variables": "{\n\t\"callID\":{{NEW_CALL_ID}}\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "addUserRole [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "03da66b1-01f2-4643-b1c2-52d4608854ff",
						"exec": [
							"pm.test(\"Should add user role\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.addUserRole.success).to.equal(true);",
							"    pm.expect(jsonData.data.addUserRole.error).to.equal(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"type": "text",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"type": "text",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"type": "text",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"type": "text",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"type": "text",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"type": "text",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Connection",
						"type": "text",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($newUserId:Int!) {\n  addUserRole(userID: $newUserId, roleID: 2) {\n      success\n      error\n  }\n}\n",
						"variables": "{\n\t\"newUserId\":{{NEW_USER_ID}}\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "addUserForReview [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eeee1a12-696f-464f-b138-054373921e76",
						"exec": [
							"pm.test(\"Should add user for review\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.addUserForReview.review.id).to.be.above(0);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"NEW_REVIEW_ID\", jsonData.data.addUserForReview.review.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"type": "text",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"type": "text",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"type": "text",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"type": "text",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"type": "text",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"type": "text",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Connection",
						"type": "text",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($newUserId:Int!, $newProposalId:Int!, $newSepId:Int!) {\n  addUserForReview(userID: $newUserId, sepID: $newSepId, proposalID: $newProposalId) {\n    review {\n      id\n\t}\n    error\n  }\n}\n",
						"variables": "{\n\t\"newUserId\":{{NEW_USER_ID}},\n\t\"newProposalId\":{{NEW_PROPOSAL_ID}},\n\t\"newSepId\":{{NEW_SEP_ID}}\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "addReview [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d791d6b7-9a48-441d-a1bd-513080f6c1e6",
						"exec": [
							"pm.test(\"Should add review\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.addReview.review.id).to.equal(pm.environment.get(\"NEW_REVIEW_ID\"));",
							"    pm.expect(jsonData.data.addReview.error).to.equal(null);",
							"    pm.expect(jsonData.data.addReview.review.comment).to.equal(\"Test comment\");",
							"    pm.expect(jsonData.data.addReview.review.grade).to.equal(9);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"type": "text",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"type": "text",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"type": "text",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"type": "text",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"type": "text",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"type": "text",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Connection",
						"type": "text",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($reviewID: Int!, $sepID: Int!) {\n  addReview(reviewID: $reviewID, comment:\"Test comment\", grade:9, status:DRAFT, sepID: $sepID) {\n    review {\n        id,\n        comment,\n        grade,\n    }\n    error\n  }\n}\n",
						"variables": "{\n\t\"reviewID\":{{NEW_REVIEW_ID}},\n\t\"sepID\": {{NEW_SEP_ID}}\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "review [Query]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f99970ac-e4da-4969-8e65-fdc29639b077",
						"exec": [
							"pm.test(\"Should get review\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.review.id).to.eql(pm.environment.get(\"NEW_REVIEW_ID\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAzVDA4OjI0OjU2LjUyMFoiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MjBaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDEwMzkyMiwiZXhwIjoxNTcwNzA4NzIyfQ.VELbODuxgIO7cK7zkdEWLhNZD1EI1PyKopqCiYHonUQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query($reviewID: Int!) {\n  review(id:$reviewID)\n    {\n      id\n    }\n}\n",
						"variables": "{\n\t\"reviewID\":{{NEW_REVIEW_ID}}\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeUserForReview [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e757e1b1-909d-4b30-ae14-17c0b3f48a04",
						"exec": [
							"pm.test(\"Should remove user from review\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.removeUserForReview.review.id).to.be.above(0);",
							"    pm.expect(jsonData.data.removeUserForReview.error).to.equal(null);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"NEW_REVIEW_ID\", jsonData.data.removeUserForReview.review.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"type": "text",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"type": "text",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"type": "text",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"type": "text",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"type": "text",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"type": "text",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Connection",
						"type": "text",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($newReviewID:Int!) {\n  removeUserForReview(reviewID: $newReviewID) {\n      review {\n          id\n      }\n      error\n  }\n}\n",
						"variables": "{\n\t\"newReviewID\":{{NEW_REVIEW_ID}}\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPageContent [Query]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "822bfe45-5899-44d5-9405-095f0475f704",
						"exec": [
							"pm.test(\"Should get page content\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.getPageContent).to.not.be.eql(null)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAzVDA4OjI0OjU2LjUyMFoiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MjBaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDEwMzkyMiwiZXhwIjoxNTcwNzA4NzIyfQ.VELbODuxgIO7cK7zkdEWLhNZD1EI1PyKopqCiYHonUQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getPageContent(id:HELPPAGE)\n}\n",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "setPageContent [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "00c254a9-3576-41c1-9759-a391134701e1",
						"exec": [
							"pm.test(\"Should set page content\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.setPageContent.page.content).to.not.be.eql(null)",
							"    pm.expect(jsonData.data.setPageContent.error).to.be.eql(null)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAzVDA4OjI0OjU2LjUyMFoiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MjBaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDEwMzkyMiwiZXhwIjoxNTcwNzA4NzIyfQ.VELbODuxgIO7cK7zkdEWLhNZD1EI1PyKopqCiYHonUQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($content: String!) {\n  setPageContent(id:HELPPAGE, text:$content)\n    {\n      page{\n        content\n      }\n      error\n    }\n}\n",
						"variables": "{\n\t\"content\":\"{{$randomLoremSentences}}\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "proposals [Query]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "09fde8e9-8981-4db1-8392-606dd12d6470",
						"exec": [
							"pm.test(\"Should get proposals\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.proposals.totalCount).to.be.above(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAzVDA4OjI0OjU2LjUyMFoiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MjBaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDEwMzkyMiwiZXhwIjoxNTcwNzA4NzIyfQ.VELbODuxgIO7cK7zkdEWLhNZD1EI1PyKopqCiYHonUQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  proposals {\n    proposals{\n      id\n      shortCode\n      title\n      status {\n        name\n      }\n      }\n    totalCount\n    }\n  }",
						"variables": "{\n    \"filter\": \"\"\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "proposals2 [Query]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ba0214d3-4e40-4b8c-9ddb-d093352a02f0",
						"exec": [
							"pm.test(\"Should get proposals\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.proposals.totalCount).to.be.above(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAzVDA4OjI0OjU2LjUyMFoiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MjBaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDEwMzkyMiwiZXhwIjoxNTcwNzA4NzIyfQ.VELbODuxgIO7cK7zkdEWLhNZD1EI1PyKopqCiYHonUQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query($questionaryIds: [Int!]) {\n  proposals(filter:{questionaryIds:$questionaryIds}) {\n    proposals{\n      id\n      shortCode\n      title\n      status {\n        name\n      }\n      }\n    totalCount\n    }\n  }",
						"variables": "{\n    \"questionaryIds\": [{{NEW_QUESTIONARY_ID}}]\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "basicUserDetails [Query]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a321db1a-317a-4816-b32d-7d19f44a3d5e",
						"exec": [
							"pm.test(\"Should get basic user details\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.basicUserDetails.id).to.equal(pm.environment.get(\"NEW_USER_ID\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAzVDA4OjI0OjU2LjUyMFoiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MjBaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDEwMzkyMiwiZXhwIjoxNTcwNzA4NzIyfQ.VELbODuxgIO7cK7zkdEWLhNZD1EI1PyKopqCiYHonUQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($id:Int!) {\n  basicUserDetails(id:$id)\n    {\n      id\n      lastname\n      firstname\n    }\n}\n",
						"variables": "{\n\t\"id\":{{NEW_USER_ID}}\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "checkEmailExist [Query]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "be47f3de-a1d7-41a2-9c31-324f89d8b14e",
						"exec": [
							"pm.test(\"Should check email exists\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.checkEmailExist).to.equal(true);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NEW_USER_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAzVDA4OjI0OjU2LjUyMFoiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MjBaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDEwMzkyMiwiZXhwIjoxNTcwNzA4NzIyfQ.VELbODuxgIO7cK7zkdEWLhNZD1EI1PyKopqCiYHonUQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($email:String!) {\n  checkEmailExist(email:$email)\n}\n",
						"variables": "{\n\t\"email\":\"{{NEW_USER_EMAIL}}\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteProposal [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "76c8462a-fdff-45f4-aa45-4ffa3b4adba0",
						"exec": [
							"pm.test(\"Should delete proposal\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.deleteProposal.error).to.equal(null)",
							"    pm.expect(jsonData.data.deleteProposal.proposal.id).to.be.equal(pm.environment.get(\"NEW_PROPOSAL_ID\"))",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQ2FybCIsIm1pZGRsZW5hbWUiOiJDaHJpc3RpYW4iLCJsYXN0bmFtZSI6IkNhcmxzc29uIiwidXNlcm5hbWUiOiJ0ZXN0dXNlciIsInByZWZlcnJlZG5hbWUiOm51bGwsIm9yY2lkIjoiNTgxNDU5NjA0IiwiZ2VuZGVyIjoibWFsZSIsIm5hdGlvbmFsaXR5IjoiTm9yd2VnaWFuIiwiYmlydGhkYXRlIjoiMjAwMC0wNC0wMVQyMjowMDowMC4wMDBaIiwib3JnYW5pc2F0aW9uIjoiUm9iZXJ0cywgUmVpbGx5IGFuZCBHdXRrb3dza2kiLCJkZXBhcnRtZW50IjoiSVQgZGVwYXJtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJFc3RvbmlhLCBOZXcgR2FicmllbGxhLCA0MDU2IENyb25pbiBNb3RvcndheSIsInBvc2l0aW9uIjoiU3RyYXRlZ2lzdCIsImVtYWlsIjoiSmF2b240QGhvdG1haWwuY29tIiwidGVsZXBob25lIjoiKDI4OCkgNDMxLTE0NDMiLCJ0ZWxlcGhvbmVfYWx0IjoiKDM3MCkgMzg2LTg5NzYiLCJjcmVhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MTdaIiwidXBkYXRlZCI6IjIwMTktMTAtMDNUMDg6MjQ6NTYuNTE3WiJ9LCJyb2xlcyI6W3siaWQiOjEsInNob3J0Q29kZSI6InVzZXIiLCJ0aXRsZSI6IlVzZXIifV0sImlhdCI6MTU3MDA5ODAyNCwiZXhwIjoxNTcwNzAyODI0fQ.tQKzxyg8_i_Z4b2ny6-naoT3JqaFnJN_Z-MvU1ta31s"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/ProposalSubmission"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($id:Int!) {\n  deleteProposal(id:$id){\n    proposal{\n      id\n    }\n    error\n  }\n}",
						"variables": "{\n\t\"id\":{{NEW_PROPOSAL_ID}}\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteQuestionTemplateRelation [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "19965f94-62fb-4350-b120-d9c3200d6de4",
						"exec": [
							"pm.test(\"Update delete template field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.deleteQuestionTemplateRelation.error).to.be.eql(null);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7cef6751-57f5-478e-926e-02730527f58d",
						"exec": [
							"console.log(\"Authorization\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAyVDEyOjMyOjM4LjEyMloiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wMlQxMjozMjozOC4xMjJaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDAyMzY0NiwiZXhwIjoxNTcwNjI4NDQ2fQ.tz1DuEHe-9Clb0seTqQ7MJMmPeoWk3M4fRIcrP8x8CQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($questionId: String!, $templateId: Int!) {\n  deleteQuestionTemplateRelation(questionId: $questionId, templateId: $templateId) {\n    template {\n      steps {\n        topic {\n          title\n          id\n        }\n        fields {\n          question {\n            proposalQuestionId\n            dataType\n            question\n            config {\n              ... on TextInputConfig {\n                required\n              }\n            }\n          }\n        }\n      }\n    }\n    error\n  }\n}\n",
						"variables": "{\n        \"questionId\": \"{{NEW_FIELD_ID}}\",\n        \"templateId\": {{NEW_TEMPLATE_ID}}\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteQuestion [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e3b5a299-ee6d-4107-84e2-1435abe4d771",
						"exec": [
							"pm.test(\"Update delete template field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.deleteQuestion.error).to.be.eql(null);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6ea801ec-6b56-4063-9987-e1970bb53b27",
						"exec": [
							"console.log(\"Authorization\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAyVDEyOjMyOjM4LjEyMloiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wMlQxMjozMjozOC4xMjJaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDAyMzY0NiwiZXhwIjoxNTcwNjI4NDQ2fQ.tz1DuEHe-9Clb0seTqQ7MJMmPeoWk3M4fRIcrP8x8CQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($id: String!) {\n  deleteQuestion(questionId: $id) {\n    question {\n      question\n    }\n    error\n  }\n}\n",
						"variables": "{\n        \"id\": \"{{NEW_FIELD_ID}}\"\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteTopic [Mutation]",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea37f431-5244-44e4-a792-7c228e551896",
						"exec": [
							"pm.test(\"Should delete topic\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.deleteTopic.error).to.be.eql(null)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Authorization}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "http://localhost:3000/QuestionaryEditor"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyLCJ1c2VyX3RpdGxlIjoiTXIuIiwiZmlyc3RuYW1lIjoiQW5kZXJzIiwibWlkZGxlbmFtZSI6IkFkYW0iLCJsYXN0bmFtZSI6IkFuZGVyc3NvbiIsInVzZXJuYW1lIjoidGVzdG9mZmljZXIiLCJwcmVmZXJyZWRuYW1lIjoiUmhpYW5ub24iLCJvcmNpZCI6Ijg3ODMyMTg5NyIsImdlbmRlciI6Im1hbGUiLCJuYXRpb25hbGl0eSI6IkZyZW5jaCIsImJpcnRoZGF0ZSI6IjE5ODEtMDgtMDRUMjI6MDA6MDAuMDAwWiIsIm9yZ2FuaXNhdGlvbiI6IlBmYW5uZXJzdGlsbCBhbmQgU29ucyIsImRlcGFydG1lbnQiOiJJVCBkZXBhcnRtZW50Iiwib3JnYW5pc2F0aW9uX2FkZHJlc3MiOiJDb25nbywgQWxsZW5ldmlsbGUsIDM1ODIzIE11ZWxsZXIgR2xlbnMiLCJwb3NpdGlvbiI6IkxpYWlzb24iLCJlbWFpbCI6IkFhcm9uX0hhcnJpczQ5QGdtYWlsLmNvbSIsInRlbGVwaG9uZSI6IjcxMS0zMTYtNTcyOCIsInRlbGVwaG9uZV9hbHQiOiIxLTM1OS04NjQtMzQ4OSB4NzM5MCIsImNyZWF0ZWQiOiIyMDE5LTEwLTAzVDA4OjI0OjU2LjUyMFoiLCJ1cGRhdGVkIjoiMjAxOS0xMC0wM1QwODoyNDo1Ni41MjBaIn0sInJvbGVzIjpbeyJpZCI6Miwic2hvcnRDb2RlIjoidXNlcl9vZmZpY2VyIiwidGl0bGUiOiJVc2VyIE9mZmljZXIifV0sImlhdCI6MTU3MDEwMzkyMiwiZXhwIjoxNTcwNzA4NzIyfQ.VELbODuxgIO7cK7zkdEWLhNZD1EI1PyKopqCiYHonUQ"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($id: Int!) {\n    deleteTopic(topicId: $id){\n    error\n  }\n}",
						"variables": "{\n\t\"id\":{{NEW_TOPIC_ID}}\n}"
					},
					"options": {
						"graphql": {}
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "9dac65a3-4013-4bb4-b15d-c14b5a23ec25",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "915fdd0f-34fa-4c95-9e7d-9315a78a1c82",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}