<?xml version='1.0' encoding='UTF-8'?><wsdl:definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://webservice.UserOffice.stfc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" name="UserOfficeWebService" targetNamespace="http://webservice.UserOffice.stfc.com/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://webservice.UserOffice.stfc.com/" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://webservice.UserOffice.stfc.com/">
  <xs:element name="acceptLatestDataProtectionAgreement" type="tns:acceptLatestDataProtectionAgreement"/>
  <xs:element name="acceptLatestDataProtectionAgreementResponse" type="tns:acceptLatestDataProtectionAgreementResponse"/>
  <xs:element name="activateAccount" type="tns:activateAccount"/>
  <xs:element name="activateAccountResponse" type="tns:activateAccountResponse"/>
  <xs:element name="activateAccountWithoutPassword" type="tns:activateAccountWithoutPassword"/>
  <xs:element name="activateAccountWithoutPasswordResponse" type="tns:activateAccountWithoutPasswordResponse"/>
  <xs:element name="createEstablishmentFromEstablishmentDTO" type="tns:createEstablishmentFromEstablishmentDTO"/>
  <xs:element name="createEstablishmentFromEstablishmentDTOResponse" type="tns:createEstablishmentFromEstablishmentDTOResponse"/>
  <xs:element name="createFedId" type="tns:createFedId"/>
  <xs:element name="createFedIdResponse" type="tns:createFedIdResponse"/>
  <xs:element name="createPersonFromPersonDTO" type="tns:createPersonFromPersonDTO"/>
  <xs:element name="createPersonFromPersonDTOResponse" type="tns:createPersonFromPersonDTOResponse"/>
  <xs:element name="deactivatePerson" type="tns:deactivatePerson"/>
  <xs:element name="deactivatePersonResponse" type="tns:deactivatePersonResponse"/>
  <xs:element name="deleteEstablishmentById" type="tns:deleteEstablishmentById"/>
  <xs:element name="deleteEstablishmentByIdResponse" type="tns:deleteEstablishmentByIdResponse"/>
  <xs:element name="getAgeRangeOptions" type="tns:getAgeRangeOptions"/>
  <xs:element name="getAgeRangeOptionsResponse" type="tns:getAgeRangeOptionsResponse"/>
  <xs:element name="getAllCountries" type="tns:getAllCountries"/>
  <xs:element name="getAllCountriesResponse" type="tns:getAllCountriesResponse"/>
  <xs:element name="getAllEstablishmentDTOs" type="tns:getAllEstablishmentDTOs"/>
  <xs:element name="getAllEstablishmentDTOsResponse" type="tns:getAllEstablishmentDTOsResponse"/>
  <xs:element name="getAllEuCountries" type="tns:getAllEuCountries"/>
  <xs:element name="getAllEuCountriesResponse" type="tns:getAllEuCountriesResponse"/>
  <xs:element name="getAllFacilityNames" type="tns:getAllFacilityNames"/>
  <xs:element name="getAllFacilityNamesResponse" type="tns:getAllFacilityNamesResponse"/>
  <xs:element name="getAllPersonStatuses" type="tns:getAllPersonStatuses"/>
  <xs:element name="getAllPersonStatusesResponse" type="tns:getAllPersonStatusesResponse"/>
  <xs:element name="getAllTitles" type="tns:getAllTitles"/>
  <xs:element name="getAllTitlesResponse" type="tns:getAllTitlesResponse"/>
  <xs:element name="getAlternativeIdentifiersForUser" type="tns:getAlternativeIdentifiersForUser"/>
  <xs:element name="getAlternativeIdentifiersForUserResponse" type="tns:getAlternativeIdentifiersForUserResponse"/>
  <xs:element name="getBasicPeopleDetailsFromEmails" type="tns:getBasicPeopleDetailsFromEmails"/>
  <xs:element name="getBasicPeopleDetailsFromEmailsResponse" type="tns:getBasicPeopleDetailsFromEmailsResponse"/>
  <xs:element name="getBasicPeopleDetailsFromEstablishments" type="tns:getBasicPeopleDetailsFromEstablishments"/>
  <xs:element name="getBasicPeopleDetailsFromEstablishmentsResponse" type="tns:getBasicPeopleDetailsFromEstablishmentsResponse"/>
  <xs:element name="getBasicPeopleDetailsFromSurname" type="tns:getBasicPeopleDetailsFromSurname"/>
  <xs:element name="getBasicPeopleDetailsFromSurnameResponse" type="tns:getBasicPeopleDetailsFromSurnameResponse"/>
  <xs:element name="getBasicPeopleDetailsFromUserNumbers" type="tns:getBasicPeopleDetailsFromUserNumbers"/>
  <xs:element name="getBasicPeopleDetailsFromUserNumbersResponse" type="tns:getBasicPeopleDetailsFromUserNumbersResponse"/>
  <xs:element name="getBasicPeopleDetailsSinceDate" type="tns:getBasicPeopleDetailsSinceDate"/>
  <xs:element name="getBasicPeopleDetailsSinceDateResponse" type="tns:getBasicPeopleDetailsSinceDateResponse"/>
  <xs:element name="getBasicPersonDetailsByEncryptedActivationId" type="tns:getBasicPersonDetailsByEncryptedActivationId"/>
  <xs:element name="getBasicPersonDetailsByEncryptedActivationIdResponse" type="tns:getBasicPersonDetailsByEncryptedActivationIdResponse"/>
  <xs:element name="getBasicPersonDetailsByEncryptedId" type="tns:getBasicPersonDetailsByEncryptedId"/>
  <xs:element name="getBasicPersonDetailsByEncryptedIdResponse" type="tns:getBasicPersonDetailsByEncryptedIdResponse"/>
  <xs:element name="getBasicPersonDetailsByEncryptedPasswordResetId" type="tns:getBasicPersonDetailsByEncryptedPasswordResetId"/>
  <xs:element name="getBasicPersonDetailsByEncryptedPasswordResetIdResponse" type="tns:getBasicPersonDetailsByEncryptedPasswordResetIdResponse"/>
  <xs:element name="getBasicPersonDetailsFromEmail" type="tns:getBasicPersonDetailsFromEmail"/>
  <xs:element name="getBasicPersonDetailsFromEmailResponse" type="tns:getBasicPersonDetailsFromEmailResponse"/>
  <xs:element name="getBasicPersonDetailsFromFedId" type="tns:getBasicPersonDetailsFromFedId"/>
  <xs:element name="getBasicPersonDetailsFromFedIdResponse" type="tns:getBasicPersonDetailsFromFedIdResponse"/>
  <xs:element name="getBasicPersonDetailsFromUserNumber" type="tns:getBasicPersonDetailsFromUserNumber"/>
  <xs:element name="getBasicPersonDetailsFromUserNumberResponse" type="tns:getBasicPersonDetailsFromUserNumberResponse"/>
  <xs:element name="getChangesSince" type="tns:getChangesSince"/>
  <xs:element name="getChangesSinceResponse" type="tns:getChangesSinceResponse"/>
  <xs:element name="getDataLookup" type="tns:getDataLookup"/>
  <xs:element name="getDataLookupResponse" type="tns:getDataLookupResponse"/>
  <xs:element name="getDataUsages" type="tns:getDataUsages"/>
  <xs:element name="getDataUsagesResponse" type="tns:getDataUsagesResponse"/>
  <xs:element name="getDisabilities" type="tns:getDisabilities"/>
  <xs:element name="getDisabilitiesResponse" type="tns:getDisabilitiesResponse"/>
  <xs:element name="getEmergencyContactDTO" type="tns:getEmergencyContactDTO"/>
  <xs:element name="getEmergencyContactDTOResponse" type="tns:getEmergencyContactDTOResponse"/>
  <xs:element name="getEstablishmentDTO" type="tns:getEstablishmentDTO"/>
  <xs:element name="getEstablishmentDTOResponse" type="tns:getEstablishmentDTOResponse"/>
  <xs:element name="getEstablishmentDTOsByQuery" type="tns:getEstablishmentDTOsByQuery"/>
  <xs:element name="getEstablishmentDTOsByQueryResponse" type="tns:getEstablishmentDTOsByQueryResponse"/>
  <xs:element name="getEstablishmentDTOsBySearchDetails" type="tns:getEstablishmentDTOsBySearchDetails"/>
  <xs:element name="getEstablishmentDTOsBySearchDetailsResponse" type="tns:getEstablishmentDTOsBySearchDetailsResponse"/>
  <xs:element name="getEstablishmentsBySearchDetails" type="tns:getEstablishmentsBySearchDetails"/>
  <xs:element name="getEstablishmentsBySearchDetailsResponse" type="tns:getEstablishmentsBySearchDetailsResponse"/>
  <xs:element name="getEthnicities" type="tns:getEthnicities"/>
  <xs:element name="getEthnicitiesResponse" type="tns:getEthnicitiesResponse"/>
  <xs:element name="getFrequentGenders" type="tns:getFrequentGenders"/>
  <xs:element name="getFrequentGendersResponse" type="tns:getFrequentGendersResponse"/>
  <xs:element name="getGenders" type="tns:getGenders"/>
  <xs:element name="getGendersResponse" type="tns:getGendersResponse"/>
  <xs:element name="getInductionsFacilityAwarenessForUser" type="tns:getInductionsFacilityAwarenessForUser"/>
  <xs:element name="getInductionsFacilityAwarenessForUserResponse" type="tns:getInductionsFacilityAwarenessForUserResponse"/>
  <xs:element name="getMonitorDTO" type="tns:getMonitorDTO"/>
  <xs:element name="getMonitorDTOResponse" type="tns:getMonitorDTOResponse"/>
  <xs:element name="getPeopleDetailsFromEmails" type="tns:getPeopleDetailsFromEmails"/>
  <xs:element name="getPeopleDetailsFromEmailsResponse" type="tns:getPeopleDetailsFromEmailsResponse"/>
  <xs:element name="getPeopleDetailsFromSurname" type="tns:getPeopleDetailsFromSurname"/>
  <xs:element name="getPeopleDetailsFromSurnameResponse" type="tns:getPeopleDetailsFromSurnameResponse"/>
  <xs:element name="getPeopleDetailsFromUserNumbers" type="tns:getPeopleDetailsFromUserNumbers"/>
  <xs:element name="getPeopleDetailsFromUserNumbersResponse" type="tns:getPeopleDetailsFromUserNumbersResponse"/>
  <xs:element name="getPersonDTOByMarketingEmail" type="tns:getPersonDTOByMarketingEmail"/>
  <xs:element name="getPersonDTOByMarketingEmailResponse" type="tns:getPersonDTOByMarketingEmailResponse"/>
  <xs:element name="getPersonDTOFromUserNumber" type="tns:getPersonDTOFromUserNumber"/>
  <xs:element name="getPersonDTOFromUserNumberResponse" type="tns:getPersonDTOFromUserNumberResponse"/>
  <xs:element name="getPersonDetailsFromEmail" type="tns:getPersonDetailsFromEmail"/>
  <xs:element name="getPersonDetailsFromEmailResponse" type="tns:getPersonDetailsFromEmailResponse"/>
  <xs:element name="getPersonDetailsFromSessionId" type="tns:getPersonDetailsFromSessionId"/>
  <xs:element name="getPersonDetailsFromSessionIdResponse" type="tns:getPersonDetailsFromSessionIdResponse"/>
  <xs:element name="getPersonDetailsFromUserNumber" type="tns:getPersonDetailsFromUserNumber"/>
  <xs:element name="getPersonDetailsFromUserNumberResponse" type="tns:getPersonDetailsFromUserNumberResponse"/>
  <xs:element name="getPersonsFacilities" type="tns:getPersonsFacilities"/>
  <xs:element name="getPersonsFacilitiesResponse" type="tns:getPersonsFacilitiesResponse"/>
  <xs:element name="getPrivacyDTO" type="tns:getPrivacyDTO"/>
  <xs:element name="getPrivacyDTOResponse" type="tns:getPrivacyDTOResponse"/>
  <xs:element name="getRolesForUser" type="tns:getRolesForUser"/>
  <xs:element name="getRolesForUserResponse" type="tns:getRolesForUserResponse"/>
  <xs:element name="getSearchableBasicPeopleDetailsFromEmails" type="tns:getSearchableBasicPeopleDetailsFromEmails"/>
  <xs:element name="getSearchableBasicPeopleDetailsFromEmailsResponse" type="tns:getSearchableBasicPeopleDetailsFromEmailsResponse"/>
  <xs:element name="getSearchableBasicPeopleDetailsFromSurname" type="tns:getSearchableBasicPeopleDetailsFromSurname"/>
  <xs:element name="getSearchableBasicPeopleDetailsFromSurnameResponse" type="tns:getSearchableBasicPeopleDetailsFromSurnameResponse"/>
  <xs:element name="getSearchableBasicPeopleDetailsFromUserNumbers" type="tns:getSearchableBasicPeopleDetailsFromUserNumbers"/>
  <xs:element name="getSearchableBasicPeopleDetailsFromUserNumbersResponse" type="tns:getSearchableBasicPeopleDetailsFromUserNumbersResponse"/>
  <xs:element name="getSearchableBasicPersonDetailsFromEmail" type="tns:getSearchableBasicPersonDetailsFromEmail"/>
  <xs:element name="getSearchableBasicPersonDetailsFromEmailResponse" type="tns:getSearchableBasicPersonDetailsFromEmailResponse"/>
  <xs:element name="getSearchableBasicPersonDetailsFromUserNumber" type="tns:getSearchableBasicPersonDetailsFromUserNumber"/>
  <xs:element name="getSearchableBasicPersonDetailsFromUserNumberResponse" type="tns:getSearchableBasicPersonDetailsFromUserNumberResponse"/>
  <xs:element name="getUsersPermissionUserGroupDTOs" type="tns:getUsersPermissionUserGroupDTOs"/>
  <xs:element name="getUsersPermissionUserGroupDTOsResponse" type="tns:getUsersPermissionUserGroupDTOsResponse"/>
  <xs:element name="isAccountActive" type="tns:isAccountActive"/>
  <xs:element name="isAccountActiveResponse" type="tns:isAccountActiveResponse"/>
  <xs:element name="isAlternativeIdentifierActive" type="tns:isAlternativeIdentifierActive"/>
  <xs:element name="isAlternativeIdentifierActiveResponse" type="tns:isAlternativeIdentifierActiveResponse"/>
  <xs:element name="isAlternativeIdentifierLinked" type="tns:isAlternativeIdentifierLinked"/>
  <xs:element name="isAlternativeIdentifierLinkedResponse" type="tns:isAlternativeIdentifierLinkedResponse"/>
  <xs:element name="isTokenValid" type="tns:isTokenValid"/>
  <xs:element name="isTokenValidResponse" type="tns:isTokenValidResponse"/>
  <xs:element name="linkAlternativeIdentifierToUser" type="tns:linkAlternativeIdentifierToUser"/>
  <xs:element name="linkAlternativeIdentifierToUserResponse" type="tns:linkAlternativeIdentifierToUserResponse"/>
  <xs:element name="login" type="tns:login"/>
  <xs:element name="loginResponse" type="tns:loginResponse"/>
  <xs:element name="loginWithAlternativeIdentifier" type="tns:loginWithAlternativeIdentifier"/>
  <xs:element name="loginWithAlternativeIdentifierECP" type="tns:loginWithAlternativeIdentifierECP"/>
  <xs:element name="loginWithAlternativeIdentifierECPResponse" type="tns:loginWithAlternativeIdentifierECPResponse"/>
  <xs:element name="loginWithAlternativeIdentifierResponse" type="tns:loginWithAlternativeIdentifierResponse"/>
  <xs:element name="logout" type="tns:logout"/>
  <xs:element name="logoutResponse" type="tns:logoutResponse"/>
  <xs:element name="noLdapLogin" type="tns:noLdapLogin"/>
  <xs:element name="noLdapLoginResponse" type="tns:noLdapLoginResponse"/>
  <xs:element name="requestLinkExistingFedId" type="tns:requestLinkExistingFedId"/>
  <xs:element name="requestLinkExistingFedIdResponse" type="tns:requestLinkExistingFedIdResponse"/>
  <xs:element name="requestNewFedId" type="tns:requestNewFedId"/>
  <xs:element name="requestNewFedIdResponse" type="tns:requestNewFedIdResponse"/>
  <xs:element name="resetPassword" type="tns:resetPassword"/>
  <xs:element name="resetPasswordResponse" type="tns:resetPasswordResponse"/>
  <xs:element name="resetPasswordWithOldPassword" type="tns:resetPasswordWithOldPassword"/>
  <xs:element name="resetPasswordWithOldPasswordResponse" type="tns:resetPasswordWithOldPasswordResponse"/>
  <xs:element name="sendAccountActivationEmail" type="tns:sendAccountActivationEmail"/>
  <xs:element name="sendAccountActivationEmailResponse" type="tns:sendAccountActivationEmailResponse"/>
  <xs:element name="sendPasswordResetEmail" type="tns:sendPasswordResetEmail"/>
  <xs:element name="sendPasswordResetEmailResponse" type="tns:sendPasswordResetEmailResponse"/>
  <xs:element name="setMonitorDTO" type="tns:setMonitorDTO"/>
  <xs:element name="setMonitorDTOResponse" type="tns:setMonitorDTOResponse"/>
  <xs:element name="setPrivacyDTO" type="tns:setPrivacyDTO"/>
  <xs:element name="setPrivacyDTOResponse" type="tns:setPrivacyDTOResponse"/>
  <xs:element name="unlinkAlternativeIdentifierToUser" type="tns:unlinkAlternativeIdentifierToUser"/>
  <xs:element name="unlinkAlternativeIdentifierToUserResponse" type="tns:unlinkAlternativeIdentifierToUserResponse"/>
  <xs:element name="updateAlternativeIdentifiersForUser" type="tns:updateAlternativeIdentifiersForUser"/>
  <xs:element name="updateAlternativeIdentifiersForUserResponse" type="tns:updateAlternativeIdentifiersForUserResponse"/>
  <xs:element name="updateEmergencyContactDTO" type="tns:updateEmergencyContactDTO"/>
  <xs:element name="updateEmergencyContactDTOResponse" type="tns:updateEmergencyContactDTOResponse"/>
  <xs:element name="updateExpiredPassword" type="tns:updateExpiredPassword"/>
  <xs:element name="updateExpiredPasswordResponse" type="tns:updateExpiredPasswordResponse"/>
  <xs:element name="updateFedId" type="tns:updateFedId"/>
  <xs:element name="updateFedIdResponse" type="tns:updateFedIdResponse"/>
  <xs:element name="updatePersonByDTO" type="tns:updatePersonByDTO"/>
  <xs:element name="updatePersonByDTOFromSource" type="tns:updatePersonByDTOFromSource"/>
  <xs:element name="updatePersonByDTOFromSourceResponse" type="tns:updatePersonByDTOFromSourceResponse"/>
  <xs:element name="updatePersonByDTOResponse" type="tns:updatePersonByDTOResponse"/>
  <xs:element name="updatePersonsFacilities" type="tns:updatePersonsFacilities"/>
  <xs:element name="updatePersonsFacilitiesResponse" type="tns:updatePersonsFacilitiesResponse"/>
  <xs:complexType name="getBasicPeopleDetailsFromSurname">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="Surname" type="xs:string"/>
      <xs:element name="FuzzySearch" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPeopleDetailsFromSurnameResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="basicPersonDetailsDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="country" type="xs:string"/>
      <xs:element minOccurs="0" name="deptAcronym" type="xs:string"/>
      <xs:element minOccurs="0" name="deptName" type="xs:string"/>
      <xs:element minOccurs="0" name="displayName" type="xs:string"/>
      <xs:element minOccurs="0" name="email" type="xs:string"/>
      <xs:element minOccurs="0" name="establishmentId" type="xs:string"/>
      <xs:element minOccurs="0" name="familyName" type="xs:string"/>
      <xs:element minOccurs="0" name="firstNameKnownAs" type="xs:string"/>
      <xs:element minOccurs="0" name="fullName" type="xs:string"/>
      <xs:element minOccurs="0" name="givenName" type="xs:string"/>
      <xs:element minOccurs="0" name="initials" type="xs:string"/>
      <xs:element minOccurs="0" name="orgAcronym" type="xs:string"/>
      <xs:element minOccurs="0" name="orgName" type="xs:string"/>
      <xs:element minOccurs="0" name="title" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="workPhone" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAgeRangeOptions">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getAgeRangeOptionsResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPersonDetailsByEncryptedId">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="encryptedId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPersonDetailsByEncryptedIdResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSearchableBasicPeopleDetailsFromSurname">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="Surname" type="xs:string"/>
      <xs:element name="FuzzySearch" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSearchableBasicPeopleDetailsFromSurnameResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="unlinkAlternativeIdentifierToUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="AlternativeIdentifier" type="tns:alternativeIdentifierDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="alternativeIdentifierDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="created" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="createdBy" type="xs:string"/>
      <xs:element minOccurs="0" name="displayName" type="xs:string"/>
      <xs:element minOccurs="0" name="modified" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="modifiedBy" type="xs:string"/>
      <xs:element minOccurs="0" name="provider" type="xs:string"/>
      <xs:element minOccurs="0" name="secretKey" type="xs:string"/>
      <xs:element minOccurs="0" name="thruDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="uuid" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="unlinkAlternativeIdentifierToUserResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getPrivacyDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPrivacyDTOResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:privacyDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="privacyDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="searchable" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEstablishmentDTO">
    <xs:sequence>
      <xs:element name="establishmentId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEstablishmentDTOResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:establishmentDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="establishmentDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="buildingName" type="xs:string"/>
      <xs:element minOccurs="0" name="buildingNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="cityTown" type="xs:string"/>
      <xs:element minOccurs="0" name="country" type="xs:string"/>
      <xs:element minOccurs="0" name="countyProvinceState" type="xs:string"/>
      <xs:element minOccurs="0" name="deptAccronym" type="xs:string"/>
      <xs:element minOccurs="0" name="deptName" type="xs:string"/>
      <xs:element minOccurs="0" name="district" type="xs:string"/>
      <xs:element minOccurs="0" name="establishmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="orgAcronym" type="xs:string"/>
      <xs:element minOccurs="0" name="orgName" type="xs:string"/>
      <xs:element minOccurs="0" name="poBox" type="xs:string"/>
      <xs:element minOccurs="0" name="postalCode" type="xs:string"/>
      <xs:element minOccurs="0" name="site" type="xs:string"/>
      <xs:element minOccurs="0" name="street" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPersonDetailsFromSessionId">
    <xs:sequence>
      <xs:element minOccurs="0" name="SessionId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPersonDetailsFromSessionIdResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:personDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="personDetailsDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="country" type="xs:string"/>
      <xs:element minOccurs="0" name="deptAcronym" type="xs:string"/>
      <xs:element minOccurs="0" name="deptName" type="xs:string"/>
      <xs:element minOccurs="0" name="displayName" type="xs:string"/>
      <xs:element minOccurs="0" name="email" type="xs:string"/>
      <xs:element minOccurs="0" name="emergencyContact" type="xs:string"/>
      <xs:element minOccurs="0" name="establishmentId" type="xs:string"/>
      <xs:element minOccurs="0" name="familyName" type="xs:string"/>
      <xs:element minOccurs="0" name="fedId" type="xs:string"/>
      <xs:element minOccurs="0" name="firstNameKnownAs" type="xs:string"/>
      <xs:element minOccurs="0" name="fullName" type="xs:string"/>
      <xs:element minOccurs="0" name="givenName" type="xs:string"/>
      <xs:element minOccurs="0" name="initials" type="xs:string"/>
      <xs:element minOccurs="0" name="joinedDate" type="tns:timestamp"/>
      <xs:element minOccurs="0" name="lastAccessTime" type="tns:timestamp"/>
      <xs:element minOccurs="0" name="mobilePhone" type="xs:string"/>
      <xs:element minOccurs="0" name="orgAcronym" type="xs:string"/>
      <xs:element minOccurs="0" name="orgName" type="xs:string"/>
      <xs:element minOccurs="0" name="status" type="xs:string"/>
      <xs:element minOccurs="0" name="title" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="workPhone" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="timestamp">
    <xs:sequence>
      <xs:element name="nanos" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getInductionsFacilityAwarenessForUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0" type="xs:string"/>
      <xs:element minOccurs="0" name="arg1" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getInductionsFacilityAwarenessForUserResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:inductionFacilityAwarenessDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="inductionFacilityAwarenessDTO">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="facilities" nillable="true" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="inductions" nillable="true" type="tns:induction"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="induction">
    <xs:sequence>
      <xs:element minOccurs="0" name="course" type="xs:string"/>
      <xs:element minOccurs="0" name="dateTaken" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="modifiedBy" type="xs:string"/>
      <xs:element minOccurs="0" name="modifiedByName" type="xs:string"/>
      <xs:element minOccurs="0" name="modifiedDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="thruDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPersonsFacilities">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPersonsFacilitiesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEstablishmentDTOsBySearchDetails">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="searchDetails" type="tns:establishmentSearchDetails"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="establishmentSearchDetails">
    <xs:sequence>
      <xs:element minOccurs="0" name="departmentName" type="xs:string"/>
      <xs:element minOccurs="0" name="organisationName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEstablishmentDTOsBySearchDetailsResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:establishmentDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPeopleDetailsFromUserNumbers">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="UserNumbers" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPeopleDetailsFromUserNumbersResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:personDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSearchableBasicPersonDetailsFromUserNumber">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="UserNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSearchableBasicPersonDetailsFromUserNumberResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteEstablishmentById">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="EstablishmentId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteEstablishmentByIdResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getAllTitles">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getAllTitlesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updatePersonByDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="person" type="tns:personDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="personDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="deactivated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="displayName" type="xs:string"/>
      <xs:element minOccurs="0" name="dpaDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="email" type="xs:string"/>
      <xs:element minOccurs="0" name="establishmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="familyName" type="xs:string"/>
      <xs:element minOccurs="0" name="fedId" type="xs:string"/>
      <xs:element minOccurs="0" name="firstName" type="xs:string"/>
      <xs:element minOccurs="0" name="firstNameKnownAs" type="xs:string"/>
      <xs:element minOccurs="0" name="fromDate" type="tns:zonedDateTime"/>
      <xs:element minOccurs="0" name="fullName" type="xs:string"/>
      <xs:element minOccurs="0" name="initials" type="xs:string"/>
      <xs:element minOccurs="0" name="joinedDate" type="tns:timestamp"/>
      <xs:element minOccurs="0" name="lastAccessTime" type="tns:timestamp"/>
      <xs:element minOccurs="0" name="marketingEmail" type="xs:string"/>
      <xs:element minOccurs="0" name="mobilePhone" type="xs:string"/>
      <xs:element minOccurs="0" name="resetPasswordDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="rid" type="xs:long"/>
      <xs:element minOccurs="0" name="status" type="xs:string"/>
      <xs:element minOccurs="0" name="subscribedToMarketingEmails" type="xs:boolean"/>
      <xs:element minOccurs="0" name="thruDate" type="tns:zonedDateTime"/>
      <xs:element minOccurs="0" name="title" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="workPhone" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType final="extension restriction" name="zonedDateTime">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="updatePersonByDTOResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getBasicPeopleDetailsFromEmails">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="Emails" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPeopleDetailsFromEmailsResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="loginWithAlternativeIdentifier">
    <xs:sequence>
      <xs:element minOccurs="0" name="SystemSessionId" type="xs:string"/>
      <xs:element minOccurs="0" name="Uuid" type="xs:string"/>
      <xs:element minOccurs="0" name="Provider" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="loginWithAlternativeIdentifierResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPersonDTOByMarketingEmail">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="marketingEmail" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPersonDTOByMarketingEmailResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:personDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSearchableBasicPeopleDetailsFromUserNumbers">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="UserNumbers" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSearchableBasicPeopleDetailsFromUserNumbersResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isTokenValid">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isTokenValidResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSearchableBasicPeopleDetailsFromEmails">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="Emails" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSearchableBasicPeopleDetailsFromEmailsResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updatePersonsFacilities">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="facilities" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updatePersonsFacilitiesResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getMonitorDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getMonitorDTOResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:monitorDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="monitorDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="ageOption" type="xs:string"/>
      <xs:element minOccurs="0" name="disability" type="xs:string"/>
      <xs:element minOccurs="0" name="ethnicity" type="xs:string"/>
      <xs:element minOccurs="0" name="gender" type="xs:string"/>
      <xs:element minOccurs="0" name="optIn" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="resetPassword">
    <xs:sequence>
      <xs:element minOccurs="0" name="encryptedResetId" type="xs:string"/>
      <xs:element minOccurs="0" name="password" type="xs:string"/>
      <xs:element minOccurs="0" name="ipAddress" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="resetPasswordResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getDataUsages">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getDataUsagesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:dataLookupDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="dataLookupDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="value" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateEmergencyContactDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="emergencyContactDTO" type="tns:emergencyContactDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="emergencyContactDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="contact" type="xs:string"/>
      <xs:element minOccurs="0" name="contactId" type="xs:long"/>
      <xs:element minOccurs="0" name="dateAdded" type="tns:timestamp"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateEmergencyContactDTOResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="sendAccountActivationEmail">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="Email" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="sendAccountActivationEmailResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getDisabilities">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getDisabilitiesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEstablishmentsBySearchDetails">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="searchDetails" type="tns:establishmentSearchDetails"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEstablishmentsBySearchDetailsResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:establishmentSummary"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="establishmentSummary">
    <xs:sequence>
      <xs:element minOccurs="0" name="departmentAcronym" type="xs:string"/>
      <xs:element minOccurs="0" name="departmentName" type="xs:string"/>
      <xs:element minOccurs="0" name="departmentUrl" type="xs:string"/>
      <xs:element minOccurs="0" name="establishmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="groupAcronym" type="xs:string"/>
      <xs:element minOccurs="0" name="groupName" type="xs:string"/>
      <xs:element minOccurs="0" name="organisationAcronym" type="xs:string"/>
      <xs:element minOccurs="0" name="organisationName" type="xs:string"/>
      <xs:element minOccurs="0" name="organisationType" type="xs:string"/>
      <xs:element minOccurs="0" name="organisationUrl" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getRolesForUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getRolesForUserResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:roleDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="roleDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="resetPasswordWithOldPassword">
    <xs:sequence>
      <xs:element minOccurs="0" name="sessionId" type="xs:string"/>
      <xs:element minOccurs="0" name="oldPassword" type="xs:string"/>
      <xs:element minOccurs="0" name="newPassword" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="resetPasswordWithOldPasswordResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getUsersPermissionUserGroupDTOs">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getUsersPermissionUserGroupDTOsResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:permissionUserGroupDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="permissionUserGroupDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="comments" type="xs:string"/>
      <xs:element minOccurs="0" name="groupName" type="xs:string"/>
      <xs:element minOccurs="0" name="id" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deactivatePerson">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deactivatePersonResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="logout">
    <xs:sequence>
      <xs:element minOccurs="0" name="SessionId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="logoutResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="setPrivacyDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="privacyDTO" type="tns:privacyDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setPrivacyDTOResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getChangesSince">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="Since" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getChangesSinceResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:person"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="person">
    <xs:sequence>
      <xs:element minOccurs="0" name="comments" type="xs:string"/>
      <xs:element minOccurs="0" name="deactivated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="dpaDate" type="tns:timestamp"/>
      <xs:element minOccurs="0" name="email" type="xs:string"/>
      <xs:element minOccurs="0" name="establishmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="familyName" type="xs:string"/>
      <xs:element minOccurs="0" name="fedId" type="xs:string"/>
      <xs:element minOccurs="0" name="firstNameKnownAs" type="xs:string"/>
      <xs:element minOccurs="0" name="fromDate" type="tns:timestamp"/>
      <xs:element minOccurs="0" name="givenName" type="xs:string"/>
      <xs:element minOccurs="0" name="initials" type="xs:string"/>
      <xs:element minOccurs="0" name="isisSalt" type="xs:string"/>
      <xs:element minOccurs="0" name="joinedDate" type="tns:timestamp"/>
      <xs:element minOccurs="0" name="lastpwdreset" type="tns:timestamp"/>
      <xs:element minOccurs="0" name="marketingEmail" type="xs:string"/>
      <xs:element minOccurs="0" name="mobilePhone" type="xs:string"/>
      <xs:element minOccurs="0" name="monitorId" type="xs:long"/>
      <xs:element minOccurs="0" name="newUserNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="privacyId" type="xs:long"/>
      <xs:element minOccurs="0" name="rid" type="xs:long"/>
      <xs:element minOccurs="0" name="sha2" type="xs:string"/>
      <xs:element minOccurs="0" name="status" type="xs:string"/>
      <xs:element minOccurs="0" name="subscribedToMarketingEmails" type="xs:boolean"/>
      <xs:element minOccurs="0" name="thruDate" type="tns:timestamp"/>
      <xs:element minOccurs="0" name="title" type="xs:string"/>
      <xs:element minOccurs="0" name="updated" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="verified" type="xs:string"/>
      <xs:element minOccurs="0" name="workPhone" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGenders">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getGendersResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createPersonFromPersonDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="person" type="tns:personDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createPersonFromPersonDTOResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="loginWithAlternativeIdentifierECP">
    <xs:sequence>
      <xs:element minOccurs="0" name="Provider" type="xs:string"/>
      <xs:element minOccurs="0" name="Username" type="xs:string"/>
      <xs:element minOccurs="0" name="Password" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="loginWithAlternativeIdentifierECPResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateExpiredPassword">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="encryptedId" type="xs:string"/>
      <xs:element minOccurs="0" name="oldPassword" type="xs:string"/>
      <xs:element minOccurs="0" name="newPassword" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateExpiredPasswordResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getDataLookup">
    <xs:sequence>
      <xs:element minOccurs="0" name="Name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDataLookupResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateAlternativeIdentifiersForUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="AlternativeIdentifiers" type="tns:alternativeIdentifierDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateAlternativeIdentifiersForUserResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="noLdapLogin">
    <xs:sequence>
      <xs:element minOccurs="0" name="UserNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="Password" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="noLdapLoginResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getFrequentGenders">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getFrequentGendersResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEthnicities">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getEthnicitiesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPeopleDetailsSinceDate">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="Date" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPeopleDetailsSinceDateResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createEstablishmentFromEstablishmentDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="establishment" type="tns:establishmentDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createEstablishmentFromEstablishmentDTOResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPersonDetailsByEncryptedActivationId">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="encryptedActivationId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPersonDetailsByEncryptedActivationIdResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="requestLinkExistingFedId">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="dob" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="requestLinkExistingFedIdResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getBasicPersonDetailsFromEmail">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="Email" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPersonDetailsFromEmailResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="requestNewFedId">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="dob" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="requestNewFedIdResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="sendPasswordResetEmail">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="Email" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="sendPasswordResetEmailResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getAllEstablishmentDTOs">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getAllEstablishmentDTOsResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:establishmentDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEstablishmentDTOsByQuery">
    <xs:sequence>
      <xs:element minOccurs="0" name="searchQuery" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEstablishmentDTOsByQueryResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:establishmentDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="acceptLatestDataProtectionAgreement">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="encryptedId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="acceptLatestDataProtectionAgreementResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="setMonitorDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="monitorDTO" type="tns:monitorDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="setMonitorDTOResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="activateAccountWithoutPassword">
    <xs:sequence>
      <xs:element minOccurs="0" name="encryptedActivationId" type="xs:string"/>
      <xs:element minOccurs="0" name="ipAddress" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="activateAccountWithoutPasswordResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getBasicPersonDetailsFromFedId">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="FedId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPersonDetailsFromFedIdResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="activateAccount">
    <xs:sequence>
      <xs:element minOccurs="0" name="encryptedActivationId" type="xs:string"/>
      <xs:element minOccurs="0" name="password" type="xs:string"/>
      <xs:element minOccurs="0" name="ipAddress" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="activateAccountResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getBasicPeopleDetailsFromUserNumbers">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="UserNumbers" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPeopleDetailsFromUserNumbersResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAllCountries">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getAllCountriesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSearchableBasicPersonDetailsFromEmail">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="Email" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSearchableBasicPersonDetailsFromEmailResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPersonDetailsFromUserNumber">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="UserNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPersonDetailsFromUserNumberResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:personDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPersonDetailsFromEmail">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="Email" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPersonDetailsFromEmailResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:personDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createFedId">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="fedIdUserName" type="xs:string"/>
      <xs:element minOccurs="0" name="fedIdLoginPassword" type="xs:string"/>
      <xs:element minOccurs="0" name="person" type="tns:personDTO"/>
      <xs:element minOccurs="0" name="status" type="xs:string"/>
      <xs:element minOccurs="0" name="expiryDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="fedIdDob" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createFedIdResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAllFacilityNames">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getAllFacilityNamesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPeopleDetailsFromEmails">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="Emails" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPeopleDetailsFromEmailsResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:personDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isAlternativeIdentifierActive">
    <xs:sequence>
      <xs:element minOccurs="0" name="Uuid" type="xs:string"/>
      <xs:element minOccurs="0" name="Provider" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isAlternativeIdentifierActiveResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isAlternativeIdentifierLinked">
    <xs:sequence>
      <xs:element minOccurs="0" name="Uuid" type="xs:string"/>
      <xs:element minOccurs="0" name="Provider" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isAlternativeIdentifierLinkedResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="login">
    <xs:sequence>
      <xs:element minOccurs="0" name="Account" type="xs:string"/>
      <xs:element minOccurs="0" name="Password" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="loginResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="linkAlternativeIdentifierToUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="AlternativeIdentifier" type="tns:alternativeIdentifierDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="linkAlternativeIdentifierToUserResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getAlternativeIdentifiersForUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="UserNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAlternativeIdentifiersForUserResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:alternativeIdentifierDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPeopleDetailsFromEstablishments">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="SearchDetails" type="tns:establishmentSearchDetails"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPeopleDetailsFromEstablishmentsResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPersonDTOFromUserNumber">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPersonDTOFromUserNumberResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:personDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPersonDetailsByEncryptedPasswordResetId">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="encryptedResetId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPersonDetailsByEncryptedPasswordResetIdResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAllEuCountries">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getAllEuCountriesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isAccountActive">
    <xs:sequence>
      <xs:element minOccurs="0" name="UserNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isAccountActiveResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAllPersonStatuses">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getAllPersonStatusesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPersonDetailsFromUserNumber">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="UserNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getBasicPersonDetailsFromUserNumberResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:basicPersonDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPeopleDetailsFromSurname">
    <xs:sequence>
      <xs:element minOccurs="0" name="Token" type="xs:string"/>
      <xs:element minOccurs="0" name="Surname" type="xs:string"/>
      <xs:element name="FuzzySearch" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPeopleDetailsFromSurnameResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:personDetailsDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEmergencyContactDTO">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="userNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEmergencyContactDTOResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:emergencyContactDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateFedId">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="fedIdUserName" type="xs:string"/>
      <xs:element minOccurs="0" name="fedIdLoginPassword" type="xs:string"/>
      <xs:element minOccurs="0" name="objid" type="xs:string"/>
      <xs:element minOccurs="0" name="objdomid" type="xs:string"/>
      <xs:element minOccurs="0" name="expiryDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateFedIdResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updatePersonByDTOFromSource">
    <xs:sequence>
      <xs:element minOccurs="0" name="token" type="xs:string"/>
      <xs:element minOccurs="0" name="person" type="tns:personDTO"/>
      <xs:element minOccurs="0" name="updateSource" type="tns:requestSourceDTO"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updatePersonByDTOFromSourceResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:simpleType name="requestSourceDTO">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DEFAULT"/>
      <xs:enumeration value="MAILING_API"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="TokenInvalidException" type="tns:TokenInvalidException"/>
  <xs:complexType name="TokenInvalidException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ParameterException" type="tns:ParameterException"/>
  <xs:complexType name="ParameterException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="UserPermissionsException" type="tns:UserPermissionsException"/>
  <xs:complexType name="UserPermissionsException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="DuplicateRecordsException" type="tns:DuplicateRecordsException"/>
  <xs:complexType name="DuplicateRecordsException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="EncryptedIdUsedException" type="tns:EncryptedIdUsedException"/>
  <xs:complexType name="EncryptedIdUsedException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="EncryptedIdExpiredException" type="tns:EncryptedIdExpiredException"/>
  <xs:complexType name="EncryptedIdExpiredException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="EncryptedIdInvalidException" type="tns:EncryptedIdInvalidException"/>
  <xs:complexType name="EncryptedIdInvalidException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AlternativeIdentifierException" type="tns:AlternativeIdentifierException"/>
  <xs:complexType name="AlternativeIdentifierException">
    <xs:sequence>
      <xs:element name="httpStatusCode" type="xs:int"/>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="NoPreviousRecordsException" type="tns:NoPreviousRecordsException"/>
  <xs:complexType name="NoPreviousRecordsException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="EstablishmentDTOException" type="tns:EstablishmentDTOException"/>
  <xs:complexType name="EstablishmentDTOException">
    <xs:sequence>
      <xs:element name="httpStatusCode" type="xs:int"/>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="SessionException" type="tns:SessionException"/>
  <xs:complexType name="SessionException">
    <xs:sequence>
      <xs:element name="httpStatusCode" type="xs:int"/>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="UnableToDeleteEstablishmentException" type="tns:UnableToDeleteEstablishmentException"/>
  <xs:complexType name="UnableToDeleteEstablishmentException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PersonDTOException" type="tns:PersonDTOException"/>
  <xs:complexType name="PersonDTOException">
    <xs:sequence>
      <xs:element name="httpStatusCode" type="xs:int"/>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="FacilityException" type="tns:FacilityException"/>
  <xs:complexType name="FacilityException">
    <xs:sequence>
      <xs:element name="httpStatusCode" type="xs:int"/>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="LDAPException" type="tns:LDAPException"/>
  <xs:complexType name="LDAPException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="EmailConflictException" type="tns:EmailConflictException"/>
  <xs:complexType name="EmailConflictException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PasswordFormatException" type="tns:PasswordFormatException"/>
  <xs:complexType name="PasswordFormatException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="LoginException" type="tns:LoginException"/>
  <xs:complexType name="LoginException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PasswordExpiredEncryptedIdException" type="tns:PasswordExpiredEncryptedIdException"/>
  <xs:complexType name="PasswordExpiredEncryptedIdException">
    <xs:sequence>
      <xs:element minOccurs="0" name="encryptedId" type="xs:string"/>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AcceptDpaEncryptedIdException" type="tns:AcceptDpaEncryptedIdException"/>
  <xs:complexType name="AcceptDpaEncryptedIdException">
    <xs:sequence>
      <xs:element minOccurs="0" name="encryptedId" type="xs:string"/>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ExceptionWrapper" type="tns:ExceptionWrapper"/>
  <xs:complexType name="ExceptionWrapper">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="getBasicPeopleDetailsFromSurname">
    <wsdl:part element="tns:getBasicPeopleDetailsFromSurname" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPersonDetailsByEncryptedId">
    <wsdl:part element="tns:getBasicPersonDetailsByEncryptedId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateFedIdResponse">
    <wsdl:part element="tns:updateFedIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UserPermissionsException">
    <wsdl:part element="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonDetailsFromUserNumberResponse">
    <wsdl:part element="tns:getPersonDetailsFromUserNumberResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsersPermissionUserGroupDTOsResponse">
    <wsdl:part element="tns:getUsersPermissionUserGroupDTOsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPeopleDetailsFromEmailsResponse">
    <wsdl:part element="tns:getPeopleDetailsFromEmailsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableBasicPeopleDetailsFromSurname">
    <wsdl:part element="tns:getSearchableBasicPeopleDetailsFromSurname" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="unlinkAlternativeIdentifierToUser">
    <wsdl:part element="tns:unlinkAlternativeIdentifierToUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="resetPasswordWithOldPasswordResponse">
    <wsdl:part element="tns:resetPasswordWithOldPasswordResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPersonDetailsByEncryptedActivationIdResponse">
    <wsdl:part element="tns:getBasicPersonDetailsByEncryptedActivationIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEmergencyContactDTOResponse">
    <wsdl:part element="tns:getEmergencyContactDTOResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEstablishmentDTO">
    <wsdl:part element="tns:getEstablishmentDTO" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonDetailsFromSessionId">
    <wsdl:part element="tns:getPersonDetailsFromSessionId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isTokenValidResponse">
    <wsdl:part element="tns:isTokenValidResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePersonByDTOResponse">
    <wsdl:part element="tns:updatePersonByDTOResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEstablishmentDTOsBySearchDetailsResponse">
    <wsdl:part element="tns:getEstablishmentDTOsBySearchDetailsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonsFacilities">
    <wsdl:part element="tns:getPersonsFacilities" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteEstablishmentByIdResponse">
    <wsdl:part element="tns:deleteEstablishmentByIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPeopleDetailsFromUserNumbers">
    <wsdl:part element="tns:getPeopleDetailsFromUserNumbers" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPeopleDetailsFromSurnameResponse">
    <wsdl:part element="tns:getPeopleDetailsFromSurnameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInductionsFacilityAwarenessForUserResponse">
    <wsdl:part element="tns:getInductionsFacilityAwarenessForUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePersonByDTO">
    <wsdl:part element="tns:updatePersonByDTO" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createEstablishmentFromEstablishmentDTOResponse">
    <wsdl:part element="tns:createEstablishmentFromEstablishmentDTOResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="LoginException">
    <wsdl:part element="tns:LoginException" name="LoginException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPeopleDetailsSinceDateResponse">
    <wsdl:part element="tns:getBasicPeopleDetailsSinceDateResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPeopleDetailsFromEmails">
    <wsdl:part element="tns:getBasicPeopleDetailsFromEmails" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonDTOByMarketingEmail">
    <wsdl:part element="tns:getPersonDTOByMarketingEmail" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPeopleDetailsFromSurnameResponse">
    <wsdl:part element="tns:getBasicPeopleDetailsFromSurnameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="EncryptedIdInvalidException">
    <wsdl:part element="tns:EncryptedIdInvalidException" name="EncryptedIdInvalidException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableBasicPeopleDetailsFromUserNumbers">
    <wsdl:part element="tns:getSearchableBasicPeopleDetailsFromUserNumbers" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPersonDetailsFromFedIdResponse">
    <wsdl:part element="tns:getBasicPersonDetailsFromFedIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="TokenInvalidException">
    <wsdl:part element="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendAccountActivationEmail">
    <wsdl:part element="tns:sendAccountActivationEmail" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDisabilities">
    <wsdl:part element="tns:getDisabilities" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonDTOFromUserNumberResponse">
    <wsdl:part element="tns:getPersonDTOFromUserNumberResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="FacilityException">
    <wsdl:part element="tns:FacilityException" name="FacilityException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRolesForUser">
    <wsdl:part element="tns:getRolesForUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="resetPasswordWithOldPassword">
    <wsdl:part element="tns:resetPasswordWithOldPassword" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="NoPreviousRecordsException">
    <wsdl:part element="tns:NoPreviousRecordsException" name="NoPreviousRecordsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loginWithAlternativeIdentifierResponse">
    <wsdl:part element="tns:loginWithAlternativeIdentifierResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonDetailsFromSessionIdResponse">
    <wsdl:part element="tns:getPersonDetailsFromSessionIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="logout">
    <wsdl:part element="tns:logout" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPersonFromPersonDTO">
    <wsdl:part element="tns:createPersonFromPersonDTO" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAlternativeIdentifiersForUser">
    <wsdl:part element="tns:updateAlternativeIdentifiersForUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAlternativeIdentifiersForUserResponse">
    <wsdl:part element="tns:updateAlternativeIdentifiersForUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="noLdapLogin">
    <wsdl:part element="tns:noLdapLogin" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllEuCountriesResponse">
    <wsdl:part element="tns:getAllEuCountriesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setMonitorDTOResponse">
    <wsdl:part element="tns:setMonitorDTOResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="EmailConflictException">
    <wsdl:part element="tns:EmailConflictException" name="EmailConflictException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEthnicities">
    <wsdl:part element="tns:getEthnicities" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllFacilityNamesResponse">
    <wsdl:part element="tns:getAllFacilityNamesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPeopleDetailsFromEmailsResponse">
    <wsdl:part element="tns:getBasicPeopleDetailsFromEmailsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createEstablishmentFromEstablishmentDTO">
    <wsdl:part element="tns:createEstablishmentFromEstablishmentDTO" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestLinkExistingFedId">
    <wsdl:part element="tns:requestLinkExistingFedId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestNewFedId">
    <wsdl:part element="tns:requestNewFedId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendPasswordResetEmail">
    <wsdl:part element="tns:sendPasswordResetEmail" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deactivatePersonResponse">
    <wsdl:part element="tns:deactivatePersonResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEstablishmentDTOsByQuery">
    <wsdl:part element="tns:getEstablishmentDTOsByQuery" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="acceptLatestDataProtectionAgreement">
    <wsdl:part element="tns:acceptLatestDataProtectionAgreement" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPrivacyDTOResponse">
    <wsdl:part element="tns:getPrivacyDTOResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableBasicPersonDetailsFromEmailResponse">
    <wsdl:part element="tns:getSearchableBasicPersonDetailsFromEmailResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPersonDetailsFromEmailResponse">
    <wsdl:part element="tns:getBasicPersonDetailsFromEmailResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestNewFedIdResponse">
    <wsdl:part element="tns:requestNewFedIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PersonDTOException">
    <wsdl:part element="tns:PersonDTOException" name="PersonDTOException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonDetailsFromEmailResponse">
    <wsdl:part element="tns:getPersonDetailsFromEmailResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AcceptDpaEncryptedIdException">
    <wsdl:part element="tns:AcceptDpaEncryptedIdException" name="AcceptDpaEncryptedIdException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPeopleDetailsFromUserNumbersResponse">
    <wsdl:part element="tns:getBasicPeopleDetailsFromUserNumbersResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllCountries">
    <wsdl:part element="tns:getAllCountries" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableBasicPersonDetailsFromEmail">
    <wsdl:part element="tns:getSearchableBasicPersonDetailsFromEmail" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loginWithAlternativeIdentifierECPResponse">
    <wsdl:part element="tns:loginWithAlternativeIdentifierECPResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="activateAccountResponse">
    <wsdl:part element="tns:activateAccountResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonDetailsFromEmail">
    <wsdl:part element="tns:getPersonDetailsFromEmail" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isAlternativeIdentifierActive">
    <wsdl:part element="tns:isAlternativeIdentifierActive" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isAlternativeIdentifierLinked">
    <wsdl:part element="tns:isAlternativeIdentifierLinked" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="login">
    <wsdl:part element="tns:login" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="linkAlternativeIdentifierToUser">
    <wsdl:part element="tns:linkAlternativeIdentifierToUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAlternativeIdentifiersForUser">
    <wsdl:part element="tns:getAlternativeIdentifiersForUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPeopleDetailsFromEstablishments">
    <wsdl:part element="tns:getBasicPeopleDetailsFromEstablishments" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataLookupResponse">
    <wsdl:part element="tns:getDataLookupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllEuCountries">
    <wsdl:part element="tns:getAllEuCountries" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isAccountActive">
    <wsdl:part element="tns:isAccountActive" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="EncryptedIdExpiredException">
    <wsdl:part element="tns:EncryptedIdExpiredException" name="EncryptedIdExpiredException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getChangesSinceResponse">
    <wsdl:part element="tns:getChangesSinceResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="unlinkAlternativeIdentifierToUserResponse">
    <wsdl:part element="tns:unlinkAlternativeIdentifierToUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="acceptLatestDataProtectionAgreementResponse">
    <wsdl:part element="tns:acceptLatestDataProtectionAgreementResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEmergencyContactDTO">
    <wsdl:part element="tns:getEmergencyContactDTO" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateFedId">
    <wsdl:part element="tns:updateFedId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePersonByDTOFromSource">
    <wsdl:part element="tns:updatePersonByDTOFromSource" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="activateAccountWithoutPasswordResponse">
    <wsdl:part element="tns:activateAccountWithoutPasswordResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loginResponse">
    <wsdl:part element="tns:loginResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PasswordFormatException">
    <wsdl:part element="tns:PasswordFormatException" name="PasswordFormatException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAgeRangeOptions">
    <wsdl:part element="tns:getAgeRangeOptions" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEstablishmentsBySearchDetailsResponse">
    <wsdl:part element="tns:getEstablishmentsBySearchDetailsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateExpiredPasswordResponse">
    <wsdl:part element="tns:updateExpiredPasswordResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFrequentGendersResponse">
    <wsdl:part element="tns:getFrequentGendersResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPrivacyDTO">
    <wsdl:part element="tns:getPrivacyDTO" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPersonDetailsByEncryptedIdResponse">
    <wsdl:part element="tns:getBasicPersonDetailsByEncryptedIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInductionsFacilityAwarenessForUser">
    <wsdl:part element="tns:getInductionsFacilityAwarenessForUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlternativeIdentifierException">
    <wsdl:part element="tns:AlternativeIdentifierException" name="AlternativeIdentifierException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPrivacyDTOResponse">
    <wsdl:part element="tns:setPrivacyDTOResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEstablishmentDTOsBySearchDetails">
    <wsdl:part element="tns:getEstablishmentDTOsBySearchDetails" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableBasicPersonDetailsFromUserNumber">
    <wsdl:part element="tns:getSearchableBasicPersonDetailsFromUserNumber" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteEstablishmentById">
    <wsdl:part element="tns:deleteEstablishmentById" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllTitlesResponse">
    <wsdl:part element="tns:getAllTitlesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="LDAPException">
    <wsdl:part element="tns:LDAPException" name="LDAPException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllTitles">
    <wsdl:part element="tns:getAllTitles" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="noLdapLoginResponse">
    <wsdl:part element="tns:noLdapLoginResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loginWithAlternativeIdentifier">
    <wsdl:part element="tns:loginWithAlternativeIdentifier" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isTokenValid">
    <wsdl:part element="tns:isTokenValid" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isAlternativeIdentifierActiveResponse">
    <wsdl:part element="tns:isAlternativeIdentifierActiveResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExceptionWrapper">
    <wsdl:part element="tns:ExceptionWrapper" name="ExceptionWrapper">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableBasicPeopleDetailsFromEmails">
    <wsdl:part element="tns:getSearchableBasicPeopleDetailsFromEmails" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePersonsFacilities">
    <wsdl:part element="tns:updatePersonsFacilities" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMonitorDTO">
    <wsdl:part element="tns:getMonitorDTO" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DuplicateRecordsException">
    <wsdl:part element="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="resetPassword">
    <wsdl:part element="tns:resetPassword" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPersonDetailsByEncryptedPasswordResetIdResponse">
    <wsdl:part element="tns:getBasicPersonDetailsByEncryptedPasswordResetIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isAccountActiveResponse">
    <wsdl:part element="tns:isAccountActiveResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataUsages">
    <wsdl:part element="tns:getDataUsages" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableBasicPeopleDetailsFromEmailsResponse">
    <wsdl:part element="tns:getSearchableBasicPeopleDetailsFromEmailsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestLinkExistingFedIdResponse">
    <wsdl:part element="tns:requestLinkExistingFedIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableBasicPeopleDetailsFromSurnameResponse">
    <wsdl:part element="tns:getSearchableBasicPeopleDetailsFromSurnameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAgeRangeOptionsResponse">
    <wsdl:part element="tns:getAgeRangeOptionsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UnableToDeleteEstablishmentException">
    <wsdl:part element="tns:UnableToDeleteEstablishmentException" name="UnableToDeleteEstablishmentException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateEmergencyContactDTO">
    <wsdl:part element="tns:updateEmergencyContactDTO" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendAccountActivationEmailResponse">
    <wsdl:part element="tns:sendAccountActivationEmailResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="linkAlternativeIdentifierToUserResponse">
    <wsdl:part element="tns:linkAlternativeIdentifierToUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllCountriesResponse">
    <wsdl:part element="tns:getAllCountriesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEstablishmentsBySearchDetails">
    <wsdl:part element="tns:getEstablishmentsBySearchDetails" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsersPermissionUserGroupDTOs">
    <wsdl:part element="tns:getUsersPermissionUserGroupDTOs" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAlternativeIdentifiersForUserResponse">
    <wsdl:part element="tns:getAlternativeIdentifiersForUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePersonByDTOFromSourceResponse">
    <wsdl:part element="tns:updatePersonByDTOFromSourceResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPersonDetailsFromUserNumberResponse">
    <wsdl:part element="tns:getBasicPersonDetailsFromUserNumberResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="EncryptedIdUsedException">
    <wsdl:part element="tns:EncryptedIdUsedException" name="EncryptedIdUsedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deactivatePerson">
    <wsdl:part element="tns:deactivatePerson" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPrivacyDTO">
    <wsdl:part element="tns:setPrivacyDTO" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPersonFromPersonDTOResponse">
    <wsdl:part element="tns:createPersonFromPersonDTOResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getChangesSince">
    <wsdl:part element="tns:getChangesSince" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="resetPasswordResponse">
    <wsdl:part element="tns:resetPasswordResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGenders">
    <wsdl:part element="tns:getGenders" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ParameterException">
    <wsdl:part element="tns:ParameterException" name="ParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataUsagesResponse">
    <wsdl:part element="tns:getDataUsagesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRolesForUserResponse">
    <wsdl:part element="tns:getRolesForUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loginWithAlternativeIdentifierECP">
    <wsdl:part element="tns:loginWithAlternativeIdentifierECP" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateExpiredPassword">
    <wsdl:part element="tns:updateExpiredPassword" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataLookup">
    <wsdl:part element="tns:getDataLookup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEstablishmentDTOResponse">
    <wsdl:part element="tns:getEstablishmentDTOResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFrequentGenders">
    <wsdl:part element="tns:getFrequentGenders" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableBasicPersonDetailsFromUserNumberResponse">
    <wsdl:part element="tns:getSearchableBasicPersonDetailsFromUserNumberResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isAlternativeIdentifierLinkedResponse">
    <wsdl:part element="tns:isAlternativeIdentifierLinkedResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGendersResponse">
    <wsdl:part element="tns:getGendersResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPeopleDetailsSinceDate">
    <wsdl:part element="tns:getBasicPeopleDetailsSinceDate" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPersonDetailsByEncryptedActivationId">
    <wsdl:part element="tns:getBasicPersonDetailsByEncryptedActivationId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonsFacilitiesResponse">
    <wsdl:part element="tns:getPersonsFacilitiesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPersonDetailsFromEmail">
    <wsdl:part element="tns:getBasicPersonDetailsFromEmail" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllEstablishmentDTOs">
    <wsdl:part element="tns:getAllEstablishmentDTOs" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableBasicPeopleDetailsFromUserNumbersResponse">
    <wsdl:part element="tns:getSearchableBasicPeopleDetailsFromUserNumbersResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setMonitorDTO">
    <wsdl:part element="tns:setMonitorDTO" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendPasswordResetEmailResponse">
    <wsdl:part element="tns:sendPasswordResetEmailResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEstablishmentDTOsByQueryResponse">
    <wsdl:part element="tns:getEstablishmentDTOsByQueryResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonDTOByMarketingEmailResponse">
    <wsdl:part element="tns:getPersonDTOByMarketingEmailResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="activateAccountWithoutPassword">
    <wsdl:part element="tns:activateAccountWithoutPassword" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllPersonStatusesResponse">
    <wsdl:part element="tns:getAllPersonStatusesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllEstablishmentDTOsResponse">
    <wsdl:part element="tns:getAllEstablishmentDTOsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPersonDetailsFromFedId">
    <wsdl:part element="tns:getBasicPersonDetailsFromFedId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="activateAccount">
    <wsdl:part element="tns:activateAccount" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateEmergencyContactDTOResponse">
    <wsdl:part element="tns:updateEmergencyContactDTOResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEthnicitiesResponse">
    <wsdl:part element="tns:getEthnicitiesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMonitorDTOResponse">
    <wsdl:part element="tns:getMonitorDTOResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="logoutResponse">
    <wsdl:part element="tns:logoutResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPeopleDetailsFromUserNumbers">
    <wsdl:part element="tns:getBasicPeopleDetailsFromUserNumbers" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPeopleDetailsFromUserNumbersResponse">
    <wsdl:part element="tns:getPeopleDetailsFromUserNumbersResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonDetailsFromUserNumber">
    <wsdl:part element="tns:getPersonDetailsFromUserNumber" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="SessionException">
    <wsdl:part element="tns:SessionException" name="SessionException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createFedId">
    <wsdl:part element="tns:createFedId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllFacilityNames">
    <wsdl:part element="tns:getAllFacilityNames" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PasswordExpiredEncryptedIdException">
    <wsdl:part element="tns:PasswordExpiredEncryptedIdException" name="PasswordExpiredEncryptedIdException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPeopleDetailsFromEmails">
    <wsdl:part element="tns:getPeopleDetailsFromEmails" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createFedIdResponse">
    <wsdl:part element="tns:createFedIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPeopleDetailsFromEstablishmentsResponse">
    <wsdl:part element="tns:getBasicPeopleDetailsFromEstablishmentsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePersonsFacilitiesResponse">
    <wsdl:part element="tns:updatePersonsFacilitiesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDisabilitiesResponse">
    <wsdl:part element="tns:getDisabilitiesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonDTOFromUserNumber">
    <wsdl:part element="tns:getPersonDTOFromUserNumber" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPersonDetailsByEncryptedPasswordResetId">
    <wsdl:part element="tns:getBasicPersonDetailsByEncryptedPasswordResetId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllPersonStatuses">
    <wsdl:part element="tns:getAllPersonStatuses" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBasicPersonDetailsFromUserNumber">
    <wsdl:part element="tns:getBasicPersonDetailsFromUserNumber" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="EstablishmentDTOException">
    <wsdl:part element="tns:EstablishmentDTOException" name="EstablishmentDTOException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPeopleDetailsFromSurname">
    <wsdl:part element="tns:getPeopleDetailsFromSurname" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="UserOfficeWebService">
    <wsdl:operation name="getBasicPeopleDetailsFromSurname">
      <wsdl:input message="tns:getBasicPeopleDetailsFromSurname" name="getBasicPeopleDetailsFromSurname">
    </wsdl:input>
      <wsdl:output message="tns:getBasicPeopleDetailsFromSurnameResponse" name="getBasicPeopleDetailsFromSurnameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:ParameterException" name="ParameterException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAgeRangeOptions">
      <wsdl:input message="tns:getAgeRangeOptions" name="getAgeRangeOptions">
    </wsdl:input>
      <wsdl:output message="tns:getAgeRangeOptionsResponse" name="getAgeRangeOptionsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBasicPersonDetailsByEncryptedId">
      <wsdl:input message="tns:getBasicPersonDetailsByEncryptedId" name="getBasicPersonDetailsByEncryptedId">
    </wsdl:input>
      <wsdl:output message="tns:getBasicPersonDetailsByEncryptedIdResponse" name="getBasicPersonDetailsByEncryptedIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdUsedException" name="EncryptedIdUsedException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdExpiredException" name="EncryptedIdExpiredException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdInvalidException" name="EncryptedIdInvalidException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchableBasicPeopleDetailsFromSurname">
      <wsdl:input message="tns:getSearchableBasicPeopleDetailsFromSurname" name="getSearchableBasicPeopleDetailsFromSurname">
    </wsdl:input>
      <wsdl:output message="tns:getSearchableBasicPeopleDetailsFromSurnameResponse" name="getSearchableBasicPeopleDetailsFromSurnameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:ParameterException" name="ParameterException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unlinkAlternativeIdentifierToUser">
      <wsdl:input message="tns:unlinkAlternativeIdentifierToUser" name="unlinkAlternativeIdentifierToUser">
    </wsdl:input>
      <wsdl:output message="tns:unlinkAlternativeIdentifierToUserResponse" name="unlinkAlternativeIdentifierToUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:AlternativeIdentifierException" name="AlternativeIdentifierException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrivacyDTO">
      <wsdl:input message="tns:getPrivacyDTO" name="getPrivacyDTO">
    </wsdl:input>
      <wsdl:output message="tns:getPrivacyDTOResponse" name="getPrivacyDTOResponse">
    </wsdl:output>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:NoPreviousRecordsException" name="NoPreviousRecordsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEstablishmentDTO">
      <wsdl:input message="tns:getEstablishmentDTO" name="getEstablishmentDTO">
    </wsdl:input>
      <wsdl:output message="tns:getEstablishmentDTOResponse" name="getEstablishmentDTOResponse">
    </wsdl:output>
      <wsdl:fault message="tns:EstablishmentDTOException" name="EstablishmentDTOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonDetailsFromSessionId">
      <wsdl:input message="tns:getPersonDetailsFromSessionId" name="getPersonDetailsFromSessionId">
    </wsdl:input>
      <wsdl:output message="tns:getPersonDetailsFromSessionIdResponse" name="getPersonDetailsFromSessionIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInductionsFacilityAwarenessForUser">
      <wsdl:input message="tns:getInductionsFacilityAwarenessForUser" name="getInductionsFacilityAwarenessForUser">
    </wsdl:input>
      <wsdl:output message="tns:getInductionsFacilityAwarenessForUserResponse" name="getInductionsFacilityAwarenessForUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonsFacilities">
      <wsdl:input message="tns:getPersonsFacilities" name="getPersonsFacilities">
    </wsdl:input>
      <wsdl:output message="tns:getPersonsFacilitiesResponse" name="getPersonsFacilitiesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEstablishmentDTOsBySearchDetails">
      <wsdl:input message="tns:getEstablishmentDTOsBySearchDetails" name="getEstablishmentDTOsBySearchDetails">
    </wsdl:input>
      <wsdl:output message="tns:getEstablishmentDTOsBySearchDetailsResponse" name="getEstablishmentDTOsBySearchDetailsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPeopleDetailsFromUserNumbers">
      <wsdl:input message="tns:getPeopleDetailsFromUserNumbers" name="getPeopleDetailsFromUserNumbers">
    </wsdl:input>
      <wsdl:output message="tns:getPeopleDetailsFromUserNumbersResponse" name="getPeopleDetailsFromUserNumbersResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchableBasicPersonDetailsFromUserNumber">
      <wsdl:input message="tns:getSearchableBasicPersonDetailsFromUserNumber" name="getSearchableBasicPersonDetailsFromUserNumber">
    </wsdl:input>
      <wsdl:output message="tns:getSearchableBasicPersonDetailsFromUserNumberResponse" name="getSearchableBasicPersonDetailsFromUserNumberResponse">
    </wsdl:output>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteEstablishmentById">
      <wsdl:input message="tns:deleteEstablishmentById" name="deleteEstablishmentById">
    </wsdl:input>
      <wsdl:output message="tns:deleteEstablishmentByIdResponse" name="deleteEstablishmentByIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:UnableToDeleteEstablishmentException" name="UnableToDeleteEstablishmentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllTitles">
      <wsdl:input message="tns:getAllTitles" name="getAllTitles">
    </wsdl:input>
      <wsdl:output message="tns:getAllTitlesResponse" name="getAllTitlesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updatePersonByDTO">
      <wsdl:input message="tns:updatePersonByDTO" name="updatePersonByDTO">
    </wsdl:input>
      <wsdl:output message="tns:updatePersonByDTOResponse" name="updatePersonByDTOResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
      <wsdl:fault message="tns:PersonDTOException" name="PersonDTOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPeopleDetailsFromEmails">
      <wsdl:input message="tns:getBasicPeopleDetailsFromEmails" name="getBasicPeopleDetailsFromEmails">
    </wsdl:input>
      <wsdl:output message="tns:getBasicPeopleDetailsFromEmailsResponse" name="getBasicPeopleDetailsFromEmailsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loginWithAlternativeIdentifier">
      <wsdl:input message="tns:loginWithAlternativeIdentifier" name="loginWithAlternativeIdentifier">
    </wsdl:input>
      <wsdl:output message="tns:loginWithAlternativeIdentifierResponse" name="loginWithAlternativeIdentifierResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
      <wsdl:fault message="tns:AlternativeIdentifierException" name="AlternativeIdentifierException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonDTOByMarketingEmail">
      <wsdl:input message="tns:getPersonDTOByMarketingEmail" name="getPersonDTOByMarketingEmail">
    </wsdl:input>
      <wsdl:output message="tns:getPersonDTOByMarketingEmailResponse" name="getPersonDTOByMarketingEmailResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchableBasicPeopleDetailsFromUserNumbers">
      <wsdl:input message="tns:getSearchableBasicPeopleDetailsFromUserNumbers" name="getSearchableBasicPeopleDetailsFromUserNumbers">
    </wsdl:input>
      <wsdl:output message="tns:getSearchableBasicPeopleDetailsFromUserNumbersResponse" name="getSearchableBasicPeopleDetailsFromUserNumbersResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isTokenValid">
      <wsdl:input message="tns:isTokenValid" name="isTokenValid">
    </wsdl:input>
      <wsdl:output message="tns:isTokenValidResponse" name="isTokenValidResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSearchableBasicPeopleDetailsFromEmails">
      <wsdl:input message="tns:getSearchableBasicPeopleDetailsFromEmails" name="getSearchableBasicPeopleDetailsFromEmails">
    </wsdl:input>
      <wsdl:output message="tns:getSearchableBasicPeopleDetailsFromEmailsResponse" name="getSearchableBasicPeopleDetailsFromEmailsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePersonsFacilities">
      <wsdl:input message="tns:updatePersonsFacilities" name="updatePersonsFacilities">
    </wsdl:input>
      <wsdl:output message="tns:updatePersonsFacilitiesResponse" name="updatePersonsFacilitiesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
      <wsdl:fault message="tns:FacilityException" name="FacilityException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMonitorDTO">
      <wsdl:input message="tns:getMonitorDTO" name="getMonitorDTO">
    </wsdl:input>
      <wsdl:output message="tns:getMonitorDTOResponse" name="getMonitorDTOResponse">
    </wsdl:output>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:NoPreviousRecordsException" name="NoPreviousRecordsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetPassword">
      <wsdl:input message="tns:resetPassword" name="resetPassword">
    </wsdl:input>
      <wsdl:output message="tns:resetPasswordResponse" name="resetPasswordResponse">
    </wsdl:output>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataUsages">
      <wsdl:input message="tns:getDataUsages" name="getDataUsages">
    </wsdl:input>
      <wsdl:output message="tns:getDataUsagesResponse" name="getDataUsagesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateEmergencyContactDTO">
      <wsdl:input message="tns:updateEmergencyContactDTO" name="updateEmergencyContactDTO">
    </wsdl:input>
      <wsdl:output message="tns:updateEmergencyContactDTOResponse" name="updateEmergencyContactDTOResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendAccountActivationEmail">
      <wsdl:input message="tns:sendAccountActivationEmail" name="sendAccountActivationEmail">
    </wsdl:input>
      <wsdl:output message="tns:sendAccountActivationEmailResponse" name="sendAccountActivationEmailResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDisabilities">
      <wsdl:input message="tns:getDisabilities" name="getDisabilities">
    </wsdl:input>
      <wsdl:output message="tns:getDisabilitiesResponse" name="getDisabilitiesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEstablishmentsBySearchDetails">
      <wsdl:input message="tns:getEstablishmentsBySearchDetails" name="getEstablishmentsBySearchDetails">
    </wsdl:input>
      <wsdl:output message="tns:getEstablishmentsBySearchDetailsResponse" name="getEstablishmentsBySearchDetailsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRolesForUser">
      <wsdl:input message="tns:getRolesForUser" name="getRolesForUser">
    </wsdl:input>
      <wsdl:output message="tns:getRolesForUserResponse" name="getRolesForUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:LDAPException" name="LDAPException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetPasswordWithOldPassword">
      <wsdl:input message="tns:resetPasswordWithOldPassword" name="resetPasswordWithOldPassword">
    </wsdl:input>
      <wsdl:output message="tns:resetPasswordWithOldPasswordResponse" name="resetPasswordWithOldPasswordResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUsersPermissionUserGroupDTOs">
      <wsdl:input message="tns:getUsersPermissionUserGroupDTOs" name="getUsersPermissionUserGroupDTOs">
    </wsdl:input>
      <wsdl:output message="tns:getUsersPermissionUserGroupDTOsResponse" name="getUsersPermissionUserGroupDTOsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivatePerson">
      <wsdl:input message="tns:deactivatePerson" name="deactivatePerson">
    </wsdl:input>
      <wsdl:output message="tns:deactivatePersonResponse" name="deactivatePersonResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="logout">
      <wsdl:input message="tns:logout" name="logout">
    </wsdl:input>
      <wsdl:output message="tns:logoutResponse" name="logoutResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPrivacyDTO">
      <wsdl:input message="tns:setPrivacyDTO" name="setPrivacyDTO">
    </wsdl:input>
      <wsdl:output message="tns:setPrivacyDTOResponse" name="setPrivacyDTOResponse">
    </wsdl:output>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:EmailConflictException" name="EmailConflictException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChangesSince">
      <wsdl:input message="tns:getChangesSince" name="getChangesSince">
    </wsdl:input>
      <wsdl:output message="tns:getChangesSinceResponse" name="getChangesSinceResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGenders">
      <wsdl:input message="tns:getGenders" name="getGenders">
    </wsdl:input>
      <wsdl:output message="tns:getGendersResponse" name="getGendersResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createPersonFromPersonDTO">
      <wsdl:input message="tns:createPersonFromPersonDTO" name="createPersonFromPersonDTO">
    </wsdl:input>
      <wsdl:output message="tns:createPersonFromPersonDTOResponse" name="createPersonFromPersonDTOResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:PersonDTOException" name="PersonDTOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loginWithAlternativeIdentifierECP">
      <wsdl:input message="tns:loginWithAlternativeIdentifierECP" name="loginWithAlternativeIdentifierECP">
    </wsdl:input>
      <wsdl:output message="tns:loginWithAlternativeIdentifierECPResponse" name="loginWithAlternativeIdentifierECPResponse">
    </wsdl:output>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
      <wsdl:fault message="tns:AlternativeIdentifierException" name="AlternativeIdentifierException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateExpiredPassword">
      <wsdl:input message="tns:updateExpiredPassword" name="updateExpiredPassword">
    </wsdl:input>
      <wsdl:output message="tns:updateExpiredPasswordResponse" name="updateExpiredPasswordResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdUsedException" name="EncryptedIdUsedException">
    </wsdl:fault>
      <wsdl:fault message="tns:PasswordFormatException" name="PasswordFormatException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdExpiredException" name="EncryptedIdExpiredException">
    </wsdl:fault>
      <wsdl:fault message="tns:LoginException" name="LoginException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdInvalidException" name="EncryptedIdInvalidException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataLookup">
      <wsdl:input message="tns:getDataLookup" name="getDataLookup">
    </wsdl:input>
      <wsdl:output message="tns:getDataLookupResponse" name="getDataLookupResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAlternativeIdentifiersForUser">
      <wsdl:input message="tns:updateAlternativeIdentifiersForUser" name="updateAlternativeIdentifiersForUser">
    </wsdl:input>
      <wsdl:output message="tns:updateAlternativeIdentifiersForUserResponse" name="updateAlternativeIdentifiersForUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:AlternativeIdentifierException" name="AlternativeIdentifierException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="noLdapLogin">
      <wsdl:input message="tns:noLdapLogin" name="noLdapLogin">
    </wsdl:input>
      <wsdl:output message="tns:noLdapLoginResponse" name="noLdapLoginResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFrequentGenders">
      <wsdl:input message="tns:getFrequentGenders" name="getFrequentGenders">
    </wsdl:input>
      <wsdl:output message="tns:getFrequentGendersResponse" name="getFrequentGendersResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEthnicities">
      <wsdl:input message="tns:getEthnicities" name="getEthnicities">
    </wsdl:input>
      <wsdl:output message="tns:getEthnicitiesResponse" name="getEthnicitiesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBasicPeopleDetailsSinceDate">
      <wsdl:input message="tns:getBasicPeopleDetailsSinceDate" name="getBasicPeopleDetailsSinceDate">
    </wsdl:input>
      <wsdl:output message="tns:getBasicPeopleDetailsSinceDateResponse" name="getBasicPeopleDetailsSinceDateResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createEstablishmentFromEstablishmentDTO">
      <wsdl:input message="tns:createEstablishmentFromEstablishmentDTO" name="createEstablishmentFromEstablishmentDTO">
    </wsdl:input>
      <wsdl:output message="tns:createEstablishmentFromEstablishmentDTOResponse" name="createEstablishmentFromEstablishmentDTOResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:EstablishmentDTOException" name="EstablishmentDTOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPersonDetailsByEncryptedActivationId">
      <wsdl:input message="tns:getBasicPersonDetailsByEncryptedActivationId" name="getBasicPersonDetailsByEncryptedActivationId">
    </wsdl:input>
      <wsdl:output message="tns:getBasicPersonDetailsByEncryptedActivationIdResponse" name="getBasicPersonDetailsByEncryptedActivationIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdUsedException" name="EncryptedIdUsedException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdExpiredException" name="EncryptedIdExpiredException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdInvalidException" name="EncryptedIdInvalidException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="requestLinkExistingFedId">
      <wsdl:input message="tns:requestLinkExistingFedId" name="requestLinkExistingFedId">
    </wsdl:input>
      <wsdl:output message="tns:requestLinkExistingFedIdResponse" name="requestLinkExistingFedIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPersonDetailsFromEmail">
      <wsdl:input message="tns:getBasicPersonDetailsFromEmail" name="getBasicPersonDetailsFromEmail">
    </wsdl:input>
      <wsdl:output message="tns:getBasicPersonDetailsFromEmailResponse" name="getBasicPersonDetailsFromEmailResponse">
    </wsdl:output>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="requestNewFedId">
      <wsdl:input message="tns:requestNewFedId" name="requestNewFedId">
    </wsdl:input>
      <wsdl:output message="tns:requestNewFedIdResponse" name="requestNewFedIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendPasswordResetEmail">
      <wsdl:input message="tns:sendPasswordResetEmail" name="sendPasswordResetEmail">
    </wsdl:input>
      <wsdl:output message="tns:sendPasswordResetEmailResponse" name="sendPasswordResetEmailResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllEstablishmentDTOs">
      <wsdl:input message="tns:getAllEstablishmentDTOs" name="getAllEstablishmentDTOs">
    </wsdl:input>
      <wsdl:output message="tns:getAllEstablishmentDTOsResponse" name="getAllEstablishmentDTOsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEstablishmentDTOsByQuery">
      <wsdl:input message="tns:getEstablishmentDTOsByQuery" name="getEstablishmentDTOsByQuery">
    </wsdl:input>
      <wsdl:output message="tns:getEstablishmentDTOsByQueryResponse" name="getEstablishmentDTOsByQueryResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="acceptLatestDataProtectionAgreement">
      <wsdl:input message="tns:acceptLatestDataProtectionAgreement" name="acceptLatestDataProtectionAgreement">
    </wsdl:input>
      <wsdl:output message="tns:acceptLatestDataProtectionAgreementResponse" name="acceptLatestDataProtectionAgreementResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdUsedException" name="EncryptedIdUsedException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdExpiredException" name="EncryptedIdExpiredException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdInvalidException" name="EncryptedIdInvalidException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setMonitorDTO">
      <wsdl:input message="tns:setMonitorDTO" name="setMonitorDTO">
    </wsdl:input>
      <wsdl:output message="tns:setMonitorDTOResponse" name="setMonitorDTOResponse">
    </wsdl:output>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:EmailConflictException" name="EmailConflictException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateAccountWithoutPassword">
      <wsdl:input message="tns:activateAccountWithoutPassword" name="activateAccountWithoutPassword">
    </wsdl:input>
      <wsdl:output message="tns:activateAccountWithoutPasswordResponse" name="activateAccountWithoutPasswordResponse">
    </wsdl:output>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPersonDetailsFromFedId">
      <wsdl:input message="tns:getBasicPersonDetailsFromFedId" name="getBasicPersonDetailsFromFedId">
    </wsdl:input>
      <wsdl:output message="tns:getBasicPersonDetailsFromFedIdResponse" name="getBasicPersonDetailsFromFedIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateAccount">
      <wsdl:input message="tns:activateAccount" name="activateAccount">
    </wsdl:input>
      <wsdl:output message="tns:activateAccountResponse" name="activateAccountResponse">
    </wsdl:output>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPeopleDetailsFromUserNumbers">
      <wsdl:input message="tns:getBasicPeopleDetailsFromUserNumbers" name="getBasicPeopleDetailsFromUserNumbers">
    </wsdl:input>
      <wsdl:output message="tns:getBasicPeopleDetailsFromUserNumbersResponse" name="getBasicPeopleDetailsFromUserNumbersResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCountries">
      <wsdl:input message="tns:getAllCountries" name="getAllCountries">
    </wsdl:input>
      <wsdl:output message="tns:getAllCountriesResponse" name="getAllCountriesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSearchableBasicPersonDetailsFromEmail">
      <wsdl:input message="tns:getSearchableBasicPersonDetailsFromEmail" name="getSearchableBasicPersonDetailsFromEmail">
    </wsdl:input>
      <wsdl:output message="tns:getSearchableBasicPersonDetailsFromEmailResponse" name="getSearchableBasicPersonDetailsFromEmailResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonDetailsFromUserNumber">
      <wsdl:input message="tns:getPersonDetailsFromUserNumber" name="getPersonDetailsFromUserNumber">
    </wsdl:input>
      <wsdl:output message="tns:getPersonDetailsFromUserNumberResponse" name="getPersonDetailsFromUserNumberResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonDetailsFromEmail">
      <wsdl:input message="tns:getPersonDetailsFromEmail" name="getPersonDetailsFromEmail">
    </wsdl:input>
      <wsdl:output message="tns:getPersonDetailsFromEmailResponse" name="getPersonDetailsFromEmailResponse">
    </wsdl:output>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createFedId">
      <wsdl:input message="tns:createFedId" name="createFedId">
    </wsdl:input>
      <wsdl:output message="tns:createFedIdResponse" name="createFedIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllFacilityNames">
      <wsdl:input message="tns:getAllFacilityNames" name="getAllFacilityNames">
    </wsdl:input>
      <wsdl:output message="tns:getAllFacilityNamesResponse" name="getAllFacilityNamesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPeopleDetailsFromEmails">
      <wsdl:input message="tns:getPeopleDetailsFromEmails" name="getPeopleDetailsFromEmails">
    </wsdl:input>
      <wsdl:output message="tns:getPeopleDetailsFromEmailsResponse" name="getPeopleDetailsFromEmailsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAlternativeIdentifierActive">
      <wsdl:input message="tns:isAlternativeIdentifierActive" name="isAlternativeIdentifierActive">
    </wsdl:input>
      <wsdl:output message="tns:isAlternativeIdentifierActiveResponse" name="isAlternativeIdentifierActiveResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isAlternativeIdentifierLinked">
      <wsdl:input message="tns:isAlternativeIdentifierLinked" name="isAlternativeIdentifierLinked">
    </wsdl:input>
      <wsdl:output message="tns:isAlternativeIdentifierLinkedResponse" name="isAlternativeIdentifierLinkedResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="login">
      <wsdl:input message="tns:login" name="login">
    </wsdl:input>
      <wsdl:output message="tns:loginResponse" name="loginResponse">
    </wsdl:output>
      <wsdl:fault message="tns:LoginException" name="LoginException">
    </wsdl:fault>
      <wsdl:fault message="tns:PasswordExpiredEncryptedIdException" name="PasswordExpiredEncryptedIdException">
    </wsdl:fault>
      <wsdl:fault message="tns:AcceptDpaEncryptedIdException" name="AcceptDpaEncryptedIdException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="linkAlternativeIdentifierToUser">
      <wsdl:input message="tns:linkAlternativeIdentifierToUser" name="linkAlternativeIdentifierToUser">
    </wsdl:input>
      <wsdl:output message="tns:linkAlternativeIdentifierToUserResponse" name="linkAlternativeIdentifierToUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:AlternativeIdentifierException" name="AlternativeIdentifierException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAlternativeIdentifiersForUser">
      <wsdl:input message="tns:getAlternativeIdentifiersForUser" name="getAlternativeIdentifiersForUser">
    </wsdl:input>
      <wsdl:output message="tns:getAlternativeIdentifiersForUserResponse" name="getAlternativeIdentifiersForUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:AlternativeIdentifierException" name="AlternativeIdentifierException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPeopleDetailsFromEstablishments">
      <wsdl:input message="tns:getBasicPeopleDetailsFromEstablishments" name="getBasicPeopleDetailsFromEstablishments">
    </wsdl:input>
      <wsdl:output message="tns:getBasicPeopleDetailsFromEstablishmentsResponse" name="getBasicPeopleDetailsFromEstablishmentsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonDTOFromUserNumber">
      <wsdl:input message="tns:getPersonDTOFromUserNumber" name="getPersonDTOFromUserNumber">
    </wsdl:input>
      <wsdl:output message="tns:getPersonDTOFromUserNumberResponse" name="getPersonDTOFromUserNumberResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
      <wsdl:fault message="tns:PersonDTOException" name="PersonDTOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPersonDetailsByEncryptedPasswordResetId">
      <wsdl:input message="tns:getBasicPersonDetailsByEncryptedPasswordResetId" name="getBasicPersonDetailsByEncryptedPasswordResetId">
    </wsdl:input>
      <wsdl:output message="tns:getBasicPersonDetailsByEncryptedPasswordResetIdResponse" name="getBasicPersonDetailsByEncryptedPasswordResetIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdUsedException" name="EncryptedIdUsedException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdExpiredException" name="EncryptedIdExpiredException">
    </wsdl:fault>
      <wsdl:fault message="tns:EncryptedIdInvalidException" name="EncryptedIdInvalidException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllEuCountries">
      <wsdl:input message="tns:getAllEuCountries" name="getAllEuCountries">
    </wsdl:input>
      <wsdl:output message="tns:getAllEuCountriesResponse" name="getAllEuCountriesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isAccountActive">
      <wsdl:input message="tns:isAccountActive" name="isAccountActive">
    </wsdl:input>
      <wsdl:output message="tns:isAccountActiveResponse" name="isAccountActiveResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPersonStatuses">
      <wsdl:input message="tns:getAllPersonStatuses" name="getAllPersonStatuses">
    </wsdl:input>
      <wsdl:output message="tns:getAllPersonStatusesResponse" name="getAllPersonStatusesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBasicPersonDetailsFromUserNumber">
      <wsdl:input message="tns:getBasicPersonDetailsFromUserNumber" name="getBasicPersonDetailsFromUserNumber">
    </wsdl:input>
      <wsdl:output message="tns:getBasicPersonDetailsFromUserNumberResponse" name="getBasicPersonDetailsFromUserNumberResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateRecordsException" name="DuplicateRecordsException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPeopleDetailsFromSurname">
      <wsdl:input message="tns:getPeopleDetailsFromSurname" name="getPeopleDetailsFromSurname">
    </wsdl:input>
      <wsdl:output message="tns:getPeopleDetailsFromSurnameResponse" name="getPeopleDetailsFromSurnameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserPermissionsException" name="UserPermissionsException">
    </wsdl:fault>
      <wsdl:fault message="tns:ParameterException" name="ParameterException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEmergencyContactDTO">
      <wsdl:input message="tns:getEmergencyContactDTO" name="getEmergencyContactDTO">
    </wsdl:input>
      <wsdl:output message="tns:getEmergencyContactDTOResponse" name="getEmergencyContactDTOResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateFedId">
      <wsdl:input message="tns:updateFedId" name="updateFedId">
    </wsdl:input>
      <wsdl:output message="tns:updateFedIdResponse" name="updateFedIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ExceptionWrapper" name="ExceptionWrapper">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePersonByDTOFromSource">
      <wsdl:input message="tns:updatePersonByDTOFromSource" name="updatePersonByDTOFromSource">
    </wsdl:input>
      <wsdl:output message="tns:updatePersonByDTOFromSourceResponse" name="updatePersonByDTOFromSourceResponse">
    </wsdl:output>
      <wsdl:fault message="tns:TokenInvalidException" name="TokenInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:SessionException" name="SessionException">
    </wsdl:fault>
      <wsdl:fault message="tns:PersonDTOException" name="PersonDTOException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserOfficeWebServiceSoapBinding" type="tns:UserOfficeWebService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getBasicPeopleDetailsFromSurname">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBasicPeopleDetailsFromSurname">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBasicPeopleDetailsFromSurnameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ParameterException">
        <soap:fault name="ParameterException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAgeRangeOptions">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAgeRangeOptions">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAgeRangeOptionsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBasicPersonDetailsByEncryptedId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBasicPersonDetailsByEncryptedId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBasicPersonDetailsByEncryptedIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdUsedException">
        <soap:fault name="EncryptedIdUsedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdExpiredException">
        <soap:fault name="EncryptedIdExpiredException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdInvalidException">
        <soap:fault name="EncryptedIdInvalidException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchableBasicPeopleDetailsFromSurname">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchableBasicPeopleDetailsFromSurname">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchableBasicPeopleDetailsFromSurnameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ParameterException">
        <soap:fault name="ParameterException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unlinkAlternativeIdentifierToUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="unlinkAlternativeIdentifierToUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="unlinkAlternativeIdentifierToUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlternativeIdentifierException">
        <soap:fault name="AlternativeIdentifierException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrivacyDTO">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPrivacyDTO">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPrivacyDTOResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NoPreviousRecordsException">
        <soap:fault name="NoPreviousRecordsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEstablishmentDTO">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEstablishmentDTO">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEstablishmentDTOResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EstablishmentDTOException">
        <soap:fault name="EstablishmentDTOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonDetailsFromSessionId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPersonDetailsFromSessionId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPersonDetailsFromSessionIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInductionsFacilityAwarenessForUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getInductionsFacilityAwarenessForUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getInductionsFacilityAwarenessForUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonsFacilities">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPersonsFacilities">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPersonsFacilitiesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEstablishmentDTOsBySearchDetails">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEstablishmentDTOsBySearchDetails">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEstablishmentDTOsBySearchDetailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPeopleDetailsFromUserNumbers">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPeopleDetailsFromUserNumbers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPeopleDetailsFromUserNumbersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchableBasicPersonDetailsFromUserNumber">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchableBasicPersonDetailsFromUserNumber">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchableBasicPersonDetailsFromUserNumberResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteEstablishmentById">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteEstablishmentById">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteEstablishmentByIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnableToDeleteEstablishmentException">
        <soap:fault name="UnableToDeleteEstablishmentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllTitles">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllTitles">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllTitlesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updatePersonByDTO">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updatePersonByDTO">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updatePersonByDTOResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PersonDTOException">
        <soap:fault name="PersonDTOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPeopleDetailsFromEmails">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBasicPeopleDetailsFromEmails">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBasicPeopleDetailsFromEmailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loginWithAlternativeIdentifier">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="loginWithAlternativeIdentifier">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="loginWithAlternativeIdentifierResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlternativeIdentifierException">
        <soap:fault name="AlternativeIdentifierException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonDTOByMarketingEmail">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPersonDTOByMarketingEmail">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPersonDTOByMarketingEmailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchableBasicPeopleDetailsFromUserNumbers">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchableBasicPeopleDetailsFromUserNumbers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchableBasicPeopleDetailsFromUserNumbersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isTokenValid">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isTokenValid">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isTokenValidResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSearchableBasicPeopleDetailsFromEmails">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchableBasicPeopleDetailsFromEmails">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchableBasicPeopleDetailsFromEmailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePersonsFacilities">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updatePersonsFacilities">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updatePersonsFacilitiesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FacilityException">
        <soap:fault name="FacilityException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMonitorDTO">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getMonitorDTO">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMonitorDTOResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NoPreviousRecordsException">
        <soap:fault name="NoPreviousRecordsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetPassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="resetPassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="resetPasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataUsages">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDataUsages">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDataUsagesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateEmergencyContactDTO">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateEmergencyContactDTO">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateEmergencyContactDTOResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendAccountActivationEmail">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="sendAccountActivationEmail">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendAccountActivationEmailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDisabilities">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDisabilities">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDisabilitiesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEstablishmentsBySearchDetails">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEstablishmentsBySearchDetails">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEstablishmentsBySearchDetailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRolesForUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRolesForUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRolesForUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="LDAPException">
        <soap:fault name="LDAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetPasswordWithOldPassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="resetPasswordWithOldPassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="resetPasswordWithOldPasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUsersPermissionUserGroupDTOs">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUsersPermissionUserGroupDTOs">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUsersPermissionUserGroupDTOsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivatePerson">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deactivatePerson">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deactivatePersonResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="logout">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="logout">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="logoutResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPrivacyDTO">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setPrivacyDTO">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setPrivacyDTOResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EmailConflictException">
        <soap:fault name="EmailConflictException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChangesSince">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getChangesSince">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getChangesSinceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGenders">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getGenders">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGendersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createPersonFromPersonDTO">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createPersonFromPersonDTO">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createPersonFromPersonDTOResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PersonDTOException">
        <soap:fault name="PersonDTOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loginWithAlternativeIdentifierECP">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="loginWithAlternativeIdentifierECP">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="loginWithAlternativeIdentifierECPResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlternativeIdentifierException">
        <soap:fault name="AlternativeIdentifierException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateExpiredPassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateExpiredPassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateExpiredPasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdUsedException">
        <soap:fault name="EncryptedIdUsedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PasswordFormatException">
        <soap:fault name="PasswordFormatException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdExpiredException">
        <soap:fault name="EncryptedIdExpiredException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="LoginException">
        <soap:fault name="LoginException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdInvalidException">
        <soap:fault name="EncryptedIdInvalidException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataLookup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDataLookup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDataLookupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAlternativeIdentifiersForUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateAlternativeIdentifiersForUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateAlternativeIdentifiersForUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlternativeIdentifierException">
        <soap:fault name="AlternativeIdentifierException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="noLdapLogin">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="noLdapLogin">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="noLdapLoginResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFrequentGenders">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getFrequentGenders">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getFrequentGendersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEthnicities">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEthnicities">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEthnicitiesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBasicPeopleDetailsSinceDate">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBasicPeopleDetailsSinceDate">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBasicPeopleDetailsSinceDateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createEstablishmentFromEstablishmentDTO">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createEstablishmentFromEstablishmentDTO">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createEstablishmentFromEstablishmentDTOResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EstablishmentDTOException">
        <soap:fault name="EstablishmentDTOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPersonDetailsByEncryptedActivationId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBasicPersonDetailsByEncryptedActivationId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBasicPersonDetailsByEncryptedActivationIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdUsedException">
        <soap:fault name="EncryptedIdUsedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdExpiredException">
        <soap:fault name="EncryptedIdExpiredException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdInvalidException">
        <soap:fault name="EncryptedIdInvalidException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="requestLinkExistingFedId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="requestLinkExistingFedId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="requestLinkExistingFedIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPersonDetailsFromEmail">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBasicPersonDetailsFromEmail">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBasicPersonDetailsFromEmailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="requestNewFedId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="requestNewFedId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="requestNewFedIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendPasswordResetEmail">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="sendPasswordResetEmail">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendPasswordResetEmailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllEstablishmentDTOs">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllEstablishmentDTOs">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllEstablishmentDTOsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEstablishmentDTOsByQuery">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEstablishmentDTOsByQuery">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEstablishmentDTOsByQueryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="acceptLatestDataProtectionAgreement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="acceptLatestDataProtectionAgreement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="acceptLatestDataProtectionAgreementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdUsedException">
        <soap:fault name="EncryptedIdUsedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdExpiredException">
        <soap:fault name="EncryptedIdExpiredException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdInvalidException">
        <soap:fault name="EncryptedIdInvalidException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setMonitorDTO">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setMonitorDTO">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setMonitorDTOResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EmailConflictException">
        <soap:fault name="EmailConflictException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateAccountWithoutPassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="activateAccountWithoutPassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="activateAccountWithoutPasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPersonDetailsFromFedId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBasicPersonDetailsFromFedId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBasicPersonDetailsFromFedIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateAccount">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="activateAccount">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="activateAccountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPeopleDetailsFromUserNumbers">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBasicPeopleDetailsFromUserNumbers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBasicPeopleDetailsFromUserNumbersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCountries">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllCountries">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllCountriesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSearchableBasicPersonDetailsFromEmail">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchableBasicPersonDetailsFromEmail">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchableBasicPersonDetailsFromEmailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonDetailsFromUserNumber">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPersonDetailsFromUserNumber">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPersonDetailsFromUserNumberResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonDetailsFromEmail">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPersonDetailsFromEmail">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPersonDetailsFromEmailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createFedId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createFedId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createFedIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllFacilityNames">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllFacilityNames">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllFacilityNamesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPeopleDetailsFromEmails">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPeopleDetailsFromEmails">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPeopleDetailsFromEmailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAlternativeIdentifierActive">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isAlternativeIdentifierActive">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isAlternativeIdentifierActiveResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isAlternativeIdentifierLinked">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isAlternativeIdentifierLinked">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isAlternativeIdentifierLinkedResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="login">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="login">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="loginResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoginException">
        <soap:fault name="LoginException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PasswordExpiredEncryptedIdException">
        <soap:fault name="PasswordExpiredEncryptedIdException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AcceptDpaEncryptedIdException">
        <soap:fault name="AcceptDpaEncryptedIdException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="linkAlternativeIdentifierToUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="linkAlternativeIdentifierToUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="linkAlternativeIdentifierToUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlternativeIdentifierException">
        <soap:fault name="AlternativeIdentifierException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAlternativeIdentifiersForUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAlternativeIdentifiersForUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAlternativeIdentifiersForUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlternativeIdentifierException">
        <soap:fault name="AlternativeIdentifierException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPeopleDetailsFromEstablishments">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBasicPeopleDetailsFromEstablishments">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBasicPeopleDetailsFromEstablishmentsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonDTOFromUserNumber">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPersonDTOFromUserNumber">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPersonDTOFromUserNumberResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PersonDTOException">
        <soap:fault name="PersonDTOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBasicPersonDetailsByEncryptedPasswordResetId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBasicPersonDetailsByEncryptedPasswordResetId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBasicPersonDetailsByEncryptedPasswordResetIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdUsedException">
        <soap:fault name="EncryptedIdUsedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdExpiredException">
        <soap:fault name="EncryptedIdExpiredException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EncryptedIdInvalidException">
        <soap:fault name="EncryptedIdInvalidException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllEuCountries">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllEuCountries">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllEuCountriesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isAccountActive">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isAccountActive">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isAccountActiveResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPersonStatuses">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllPersonStatuses">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllPersonStatusesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBasicPersonDetailsFromUserNumber">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBasicPersonDetailsFromUserNumber">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBasicPersonDetailsFromUserNumberResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateRecordsException">
        <soap:fault name="DuplicateRecordsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPeopleDetailsFromSurname">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPeopleDetailsFromSurname">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPeopleDetailsFromSurnameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserPermissionsException">
        <soap:fault name="UserPermissionsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ParameterException">
        <soap:fault name="ParameterException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEmergencyContactDTO">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEmergencyContactDTO">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEmergencyContactDTOResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateFedId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateFedId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateFedIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ExceptionWrapper">
        <soap:fault name="ExceptionWrapper" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePersonByDTOFromSource">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updatePersonByDTOFromSource">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updatePersonByDTOFromSourceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TokenInvalidException">
        <soap:fault name="TokenInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SessionException">
        <soap:fault name="SessionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PersonDTOException">
        <soap:fault name="PersonDTOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserOfficeWebService">
    <wsdl:port binding="tns:UserOfficeWebServiceSoapBinding" name="UserOfficeWebServicePort">
      <soap:address location="http://172.17.0.1:1080/ws/UserOfficeWebService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>